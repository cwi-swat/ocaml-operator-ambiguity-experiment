(
  open Event
  let
  (
    ch
    (
    new_channel
    (
        ()
    )
    :
     channel
     (
       string
       (
       )
     )
    )
  )
  let
  (
     f
   (
    case
        (
     		 tag
     		(
     		 case
     		     (
     		 	  msg
     		      sequence
     		      (
     		        select
     		        (
     		            ::
     		             (
     		             send
     		             (
     		                 ch
     		                 msg
     		             )
     		             ::
     		             (
     		             wrap
     		             (
     		                 receive
     		                 (
     		                     ch
     		                 )
     		                 (
     		                   case
     		                   (
     		                    x
     		                    sequence
     		                    (
     		                      print_string
     		                      (
     		                          ^
     		                          (
     		                              tag
     		                              ^
     		                              (
     		                                  ": "
     		                                  x
     		                              )
     		                          )
     		                      )
     		                    ;
     		                      print_newline
     		                      (
     		                          ()
     		                      )
     		                    )
     		                   )
     		                 )
     		             )
     		             []
     		             ) 
     		             ) 
     		        )
     		      ;
     		        f
     		        (
     		            tag
     		            msg
     		        )
     		      )
     		     )
     		)
        )
   )
  )
   sequence
   (
     Thread.create
     (
         f
         (
             "A"
         )
         "hello"
     )
   ;
     sequence
     (
       f
       (
           "B"
           "world"
       )
     ;
       exit
       (
           0
       )
     )
   )
)
