
(
    								 
  let
  (
   
    mut
    Mutex.create
    (
        ()
    ) 
   							    		    
  )
                                     
  let
  (
   
    niter
    ref
    (
        0
    ) 
   							    		    
  )
                                     
  let
  (
   
    token
    ref
    (
        0
    ) 
   							    		    
  )
                                     
  let
  (
   
    process
   (
    case
        (
    	  
    	  (
    	   n
    	       						 
    	  	conds
    	  
    	  	nprocs
    	  
    	  )
         
          while
          true
          
          sequence
          (
            Mutex.lock
            (
                mut
            )
          ;
            
            sequence
            (
              
               while
               <>
               (
                   
                    !
                    (
                    token
                    )
                       							 
                   n
               )
               Condition.wait
               (
                   Array.get
                   (
                    conds
                    n
                   )
                   												
                   mut
               )	 
                  									 
            ;
              
              sequence
              (
                incr
                (
                    token
                )
              ;
                
                sequence
                (
                  ifthenelse
                  (
                   if
                   (
                    >=
                    (
                        
                         !
                         (
                         token
                         )
                            							 
                        nprocs
                    )
                   )
                   then
                   (
                    :=
                    (
                        token
                        0
                    )
                   )
                   else
                   (
                   )
                  )
                      									   
                ;
                  
                  sequence
                  (
                    ifthenelse
                    (
                     if
                     (
                      =
                      (
                          n
                          0
                      )
                     )
                     then
                     (
                      
                      sequence
                      (
                        decr
                        (
                            niter
                        )
                      ;
                        ifthenelse
                        (
                         if
                         (
                          <=
                          (
                              
                               !
                               (
                               niter
                               )
                                  							 
                              0
                          )
                         )
                         then
                         (
                          exit
                          (
                              0
                          )
                         )
                         else
                         (
                         )
                        )
                            									   
                      )
                          							
                     )
                     else
                     (
                     )
                    )
                        									   
                  ;
                    
                    sequence
                    (
                      Condition.signal
                      (
                          Array.get
                          (
                           conds
                           
                            !
                            (
                            token
                            )
                               							 
                          )
                          												
                      )
                    ;
                      Mutex.unlock
                      (
                          mut
                      )
                    )
                        							
                  )
                      							
                )
                    							
              )
                  							
            )
                							
          )
              								 
             									 
        )
   )
       		    
  )
                                     
  let
  (
   
    main
   (
    case
        (
    	  ()
         
         let
         (
          (
             									  
           
            nprocs
            
            try
            int_of_string
            (
                Array.get
                (
                 Sys.argv
                 1
                )
                												
            )
            (
            
            case
            (
              _
              
              100
            ) 
            	        											 
            	        											 
            )
                							    
           							    		   
             									  
          )
         in
           
           let
           (
            (
               									  
             
              iter
              
              try
              int_of_string
              (
                  Array.get
                  (
                   Sys.argv
                   2
                  )
                  												
              )
              (
              
              case
              (
                _
                
                1000
              ) 
              	        											 
              	        											 
              )
                  							    
             							    		   
               									  
            )
           in
             
             let
             (
              (
                 									  
               
                conds
                Array.create
                (
                    nprocs
                    Condition.create
                    (
                        ()
                    )
                ) 
               							    		   
                 									  
              )
             in
               
               sequence
               (
                  for i
                  1
                  -
                  (
                      nprocs
                      1
                  )
                  Array.set
                  (
                   conds
                   i
                   Condition.create
                   (
                       ()
                   )
                  )
                      									
                     														  
               ;
                 
                 sequence
                 (
                   :=
                   (
                       niter
                       iter
                   )
                 ;
                   
                   sequence
                   (
                      for i
                      0
                      -
                      (
                          nprocs
                          1
                      )
                      Thread.create
                      (
                          process
                          
                          (
                              					 i
                              					 
                          	conds
                              					 
                          	nprocs
                              					 
                          )
                              					 
                      )
                         														  
                   ;
                     Thread.delay
                     (
                         3600.
                     )
                   )
                       							
                 )
                     							
               )
                   							
             )
                 									
           )
               									
         )
             									
        )
   )
       		    
  )
                                     
  
   
   main
   (
       ()
   ) 
  							    		    
                                     
)