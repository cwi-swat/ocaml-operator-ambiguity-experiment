(
  open Unix
  let
  (
     engine
   (
    case
        (
     		  verbose
     		(
     		 case
     		     (
     		  		 number
     		  		(
     		  		 case
     		  		     (
     		  		 	  address
     		  		      sequence
     		  		      (
     		  		        print_int
     		  		        (
     		  		            number
     		  		        )
     		  		      ;
     		  		        sequence
     		  		        (
     		  		          print_string
     		  		          (
     		  		              "> connecting"
     		  		          )
     		  		        ;
     		  		          sequence
     		  		          (
     		  		            print_newline
     		  		            (
     		  		                ()
     		  		            )
     		  		          ;
     		  		            let
     		  		            (
     		  		             (
     		  		               (
     		  		                ic
     		  		               	oc
     		  		               )
     		  		               open_connection
     		  		               (
     		  		                   ADDR_INET
     		  		                      (
     		  		                       address
     		  		                      	80
     		  		                      )
     		  		               ) 
     		  		             )
     		  		            in
     		  		              sequence
     		  		              (
     		  		                print_int
     		  		                (
     		  		                    number
     		  		                )
     		  		              ;
     		  		                sequence
     		  		                (
     		  		                  print_string
     		  		                  (
     		  		                      "> connected"
     		  		                  )
     		  		                ;
     		  		                  sequence
     		  		                  (
     		  		                    print_newline
     		  		                    (
     		  		                        ()
     		  		                    )
     		  		                  ;
     		  		                    sequence
     		  		                    (
     		  		                      output_string
     		  		                      (
     		  		                          oc
     		  		                          "GET / HTTP1.0\r\n\r\n"
     		  		                      )
     		  		                    ;
     		  		                      sequence
     		  		                      (
     		  		                        flush
     		  		                        (
     		  		                            oc
     		  		                        )
     		  		                      ;
     		  		                        try
     		  		                         while
     		  		                         true
     		  		                         let
     		  		                         (
     		  		                          (
     		  		                            s
     		  		                            input_line
     		  		                            (
     		  		                                ic
     		  		                            ) 
     		  		                          )
     		  		                         in
     		  		                           ifthenelse
     		  		                           (
     		  		                            if
     		  		                            (
     		  		                             verbose
     		  		                            )
     		  		                            then
     		  		                            (
     		  		                             sequence
     		  		                             (
     		  		                               print_int
     		  		                               (
     		  		                                   number
     		  		                               )
     		  		                             ;
     		  		                               sequence
     		  		                               (
     		  		                                 print_string
     		  		                                 (
     		  		                                     ">"
     		  		                                 )
     		  		                               ;
     		  		                                 sequence
     		  		                                 (
     		  		                                   print_string
     		  		                                   (
     		  		                                       s
     		  		                                   )
     		  		                                 ;
     		  		                                   print_newline
     		  		                                   (
     		  		                                       ()
     		  		                                   )
     		  		                                 )
     		  		                               )
     		  		                             )
     		  		                            )
     		  		                            else
     		  		                            (
     		  		                            )
     		  		                           )
     		  		                         )
     		  		                        (
     		  		                        case
     		  		                        (
     		  		                          End_of_file
     		  		                          sequence
     		  		                          (
     		  		                            close_out
     		  		                            (
     		  		                                oc
     		  		                            )
     		  		                          ;
     		  		                            sequence
     		  		                            (
     		  		                              print_int
     		  		                              (
     		  		                                  number
     		  		                              )
     		  		                            ;
     		  		                              sequence
     		  		                              (
     		  		                                print_string
     		  		                                (
     		  		                                    "> data retrieved"
     		  		                                )
     		  		                              ;
     		  		                                print_newline
     		  		                                (
     		  		                                    ()
     		  		                                )
     		  		                              )
     		  		                            )
     		  		                          )
     		  		                        ) 
     		  		                        )
     		  		                      )
     		  		                    )
     		  		                  )
     		  		                )
     		  		              )
     		  		            )
     		  		          )
     		  		        )
     		  		      )
     		  		     )
     		  		)
     		     )
     		)
        )
   )
  )
  let
  (
    main
   (
    case
        (
    	  ()
         let
         (
          (
            (
             verbose
            	argv
            )
            match
            Sys.argv
            (
            case
            (
              array
              (
                _
              )
              (
               false
              	array
              	(
              	 Array.get
              	 (
              	  Sys.argv
              	  0
              	 )
              	 "caml.inria.fr"
              	)
              )
            ) 
              case
              (
               _
               (
                true
               	Sys.argv
               )
              )
            )
          )
         in
           let
           (
            (
              addresses
              Array.create
              (
                  -
                  (
                      Array.length
                      (
                          argv
                      )
                      1
                  )
                  inet_addr_any
              ) 
            )
           in
             sequence
             (
                for i
                1
                -
                (
                    Array.length
                    (
                        argv
                    )
                    1
                )
                Array.set
                (
                 addresses
                 -
                 (
                     i
                     1
                 )
                 Array.get
                 (
                  field
                  (
                  gethostbyname
                  (
                      Array.get
                      (
                       argv
                       i
                      )
                  )
                  h_addr_list
                  )
                  0
                 )
                )
             ;
               let
               (
                (
                  processes
                  Array.create
                  (
                      Array.length
                      (
                          addresses
                      )
                      Thread.self
                      (
                          ()
                      )
                  ) 
                )
               in
                 sequence
                 (
                    for i
                    0
                    -
                    (
                        Array.length
                        (
                            addresses
                        )
                        1
                    )
                    Array.set
                    (
                     processes
                     i
                     Thread.create
                     (
                         engine
                         (
                             verbose
                             i
                         )
                         Array.get
                         (
                          addresses
                          i
                         )
                     )
                    )
                 ;
                    for i
                    0
                    -
                    (
                        Array.length
                        (
                            processes
                        )
                        1
                    )
                    Thread.join
                    (
                        Array.get
                        (
                         processes
                         i
                        )
                    )
                 )
               )
             )
           )
         )
        )
   )
  )
   sequence
   (
     Printexc.catch
     (
         main
         ()
     )
   ;
     exit
     (
         0
     )
   )
)
