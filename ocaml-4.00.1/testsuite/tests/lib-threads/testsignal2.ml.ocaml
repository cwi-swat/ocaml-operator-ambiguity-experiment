(
  let
  (
    print_message
      (
        case
        (
          delay
          (
            case
            (
              c
              while
              true
                            sequence
              (
                print_char
                (
                  
                    c
                )
              ;
                sequence
                (
                  flush
                  (
                    
                      stdout
                  )
                ;
                  Thread.delay
                  (
                    
                      delay
                  )
                )
              )
            )
          )
        )
      )
  )
  sequence
  (
    Thread.sigmask
    (
      
        Unix.SIG_BLOCK
              
        ::
          (
            Sys.sigint
            ::
              (
                Sys.sigterm
                []
                              )
          )
    )
  ;
    let
    (
      (
        th1
          Thread.create
          (
            
              print_message
              (
                
                  0.6666666666
              )
            
              61
          )
      )
    in
      let
      (
        (
          th2
            Thread.create
            (
              
                print_message
                (
                  
                    1.0
                )
              
                62
            )
        )
      in
        let
        (
          (
            s
              Thread.wait_signal
              (
                
                  ::
                    (
                      Sys.sigint
                      ::
                        (
                          Sys.sigterm
                          []
                                                  )
                    )
              )
          )
        in
          Printf.printf
          (
            
              "Got signal %d, exiting...\n"
            
              s
          )
        )
      )
    )
  )
)

