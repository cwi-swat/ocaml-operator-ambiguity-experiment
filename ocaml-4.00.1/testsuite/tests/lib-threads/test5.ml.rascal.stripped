(
  open Event
  let
  (
    ch
    (
    new_channel
    (
        ()
    )
    :
     channel
     (
       string
       (
       )
     )
    )
  )
  let
  (
    sender
   (
    case
        (
    	  msg
         sequence
         (
           sync
           (
               send
               (
                   ch
                   msg
               )
           )
         ;
           sender
           (
               msg
           )
         )
        )
   )
  )
  let
  (
    receiver
   (
    case
        (
    	  name
         sequence
         (
           print_string
           (
               ^
               (
                   name
                   ^
                   (
                       ": "
                       ^
                       (
                           sync
                           (
                               receive
                               (
                                   ch
                               )
                           )
                           "\n"
                       )
                   )
               )
           )
         ;
           sequence
           (
             flush
             (
                 stdout
             )
           ;
             receiver
             (
                 name
             )
           )
         )
        )
   )
  )
   sequence
   (
     Thread.create
     (
         sender
         "hello"
     )
   ;
     sequence
     (
       Thread.create
       (
           sender
           "world"
       )
     ;
       sequence
       (
         Thread.create
         (
             receiver
             "A"
         )
       ;
         sequence
         (
           receiver
           (
               "B"
           )
         ;
           exit
           (
               0
           )
         )
       )
     )
   )
)
