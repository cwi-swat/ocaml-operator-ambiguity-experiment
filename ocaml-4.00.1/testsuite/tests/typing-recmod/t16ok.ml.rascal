
(
    								 
  module  PR_4450_1
   struct
   (
   							  
   module type MyT
    signature
    (
    		    				
     type
     (  						
         							    	 
        t
          type
          params=
          (
          
           
           a
          										 
          )
          cstrs =
          (
          )
          kind =
          
          
          (
          								  
          Succ
          (
          									
           
            t
            (
              a
            )
            
               									
          								     
          )
          								    
          								  
          )
          								  
          														  
          														 
       											   
     								        
     )
    		    				
    )    								
       							   
   							  
   module  MyMap
   functor X
   (
    MyT
    X
   )
       										    
   							  
   rec module
   (
     "MyList"
     MyT
     MyMap
     (
     MyList
     )
     								   
   									   
   )
   									   
   							  
   )
   							  
   
  										    
                                     
  module  PR_4450_2
   struct
   (
   							  
   module type MyT
    signature
    (
    		    				
     type
     (  						
         							    	 
        wrap
          type
          params=
          (
          
           
           a
          										 
          )
          cstrs =
          (
          )
          kind =
          
          
          (
          								  
          My
          (
          									
           
            t
            (
              a
            )
            
               									
          								     
          )
          								    
          								  
          )
          								  
          														  
          														 
       											   
     								         
        t
          type
          params=
          (
          
           
           a
          										 
          )
          cstrs =
          (
          )
          kind =
          <[<"map","polytype2"(["b"],"arrow1"("typeExprBrackets"("arrow1"("tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"tagg"("b")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr1"("tagg"("b")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typeConstr"([],"wrap")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>],[<>]>
          
          														  
          														 
       											   
     								        
     )
    		    				
     sig_value create
     value_description
     arrow
     
      list
      (
        a
      )
      
         									
     
      t
      (
        a
      )
      
         									
        								   
     (
     )
         								
    		    				
    )    								
       							   
   							  
   module  MyMap
   functor X
   (
    MyT
    struct
    (
    							  
    include
    (
      X
    )
    							  
    class
    (
        								   
      params = 
      (
          	
      l
          	
      )
      class name = c
      class expr = 
                  class_structure
                  (
                      								
                     method map
                     	(
                     	 
                     	 case
                     	 (
                     	 f
                     	 
                     	 
                     	 My
                     	    create
                     	    (
                     	        List.map
                     	        (
                     	            f
                     	            l
                     	        )
                     	    )
                     	     								 
                     	 )
                     	 													 
                     	)
                     	   						  
                     	poly
                     	                      				 'b 
                     	 arrow
                     	 arrow
                     	 a
                     	 b
                     	    								   
                     	 
                     	  wrap
                     	  (
                     	    b
                     	  )
                     	  
                     	     									
                     	    								   
                     	                                    
                         												 
                      								
                  )
                      								
          	
        								   
    )
        								   
    							  
    )
    							  
   )
       										    
   							  
   rec module
   (
     "MyList"
     signature
     (
     		    				
      type
      (  						
          							    	 
         wrap
           type
           params=
           (
           
            
            a
           										 
           )
           cstrs =
           (
           )
           kind =
           
           
           (
           								  
           My
           (
           									
            
             t
             (
               a
             )
             
                									
           								     
           )
           								    
           								  
           )
           								  
           														  
           														 
        											   
      								         
         t
           type
           params=
           (
           
            
            a
           										 
           )
           cstrs =
           (
           )
           kind =
           <[<"map","polytype2"(["b"],"arrow1"("typeExprBrackets"("arrow1"("tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"tagg"("b")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr1"("tagg"("b")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typeConstr"([],"wrap")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>],[]>
           
           														  
           														 
        											   
      								        
      )
     		    				
      sig_value create
      value_description
      arrow
      
       list
       (
         a
       )
       
          									
      
       t
       (
         a
       )
       
          									
         								   
      (
      )
          								
     		    				
     )
     struct
     (
     							  
     include
     (
       MyMap
       (
       MyList
       )
       								   
     )
     							  
     let
     (
      
       create
      (
       case
           (
       	  l
            new c
            (
                l
            )
           )
      )
          		    
     )
     							  
     )
     							  
   									   
   )
   									   
   							  
   )
   							  
   
  										    
                                     
)