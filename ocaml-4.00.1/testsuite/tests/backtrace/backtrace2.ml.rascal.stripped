(
  exception Error
  (
  string
  (
  )
  )
  let
  (
    f
   (
    case
        (
     		 msg
     		(
     		 case
     		     (
     		 	  n
     		      ifthenelse
     		      (
     		       if
     		       (
     		        =
     		        (
     		            n
     		            0
     		        )
     		       )
     		       then
     		       (
     		        raise
     		        (
     		             Error
     		             msg
     		        )
     		       )
     		       else
     		       (
     		        +
     		        (
     		            1
     		            f
     		            (
     		                msg
     		                -
     		                (
     		                    n
     		                    1
     		                )
     		            )
     		        )
     		       ) 
     		      )
     		     )
     		)
        )
   )
  )
  let
  (
    g
   (
    case
        (
    	  msg
         try
         f
         (
             msg
             5
         )
         (
         case
         (
           Error
           "a"
           sequence
           (
             print_string
             (
                 "a"
             )
           ;
             sequence
             (
               print_newline
               (
                   ()
               )
             ;
               0
             )
           )
         ) 
           case
           (
            patternAs 
            (
                Error
                "b"
                exn
            )
            sequence
            (
              print_string
              (
                  "b"
              )
            ;
              sequence
              (
                print_newline
                (
                    ()
                )
              ;
                raise
                (
                    exn
                )
              )
            )
           )
           case
           (
            Error
            "c"
            raise
            (
                 Error
                 "c"
            )
           )
         )
        )
   )
  )
  let
  (
    run
   (
    case
        (
    	  args
         try
         sequence
         (
           ignore
           (
               g
               (
                   Array.get
                   (
                    args
                    0
                   )
               )
           )
         ;
           print_string
           (
               "No exception\n"
           )
         )
         (
         case
         (
           exn
           sequence
           (
             Printf.printf
             (
                 "Uncaught exception %s\n"
                 Printexc.to_string
                 (
                     exn
                 )
             )
           ;
             Printexc.print_backtrace
             (
                 stdout
             )
           )
         ) 
         )
        )
   )
  )
   sequence
   (
     Printexc.record_backtrace
     (
         true
     )
   ;
     sequence
     (
       run
       (
           array
           (
            "a"
           )
       )
     ;
       sequence
       (
         run
         (
             array
             (
              "b"
             )
         )
       ;
         sequence
         (
           run
           (
               array
               (
                "c"
               )
           )
         ;
           sequence
           (
             run
             (
                 array
                 (
                  "d"
                 )
             )
           ;
             run
             (
                 array
                 (
                 )
             )
           )
         )
       )
     )
   )
)
