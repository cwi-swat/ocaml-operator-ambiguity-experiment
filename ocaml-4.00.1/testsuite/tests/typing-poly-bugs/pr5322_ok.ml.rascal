
(
    								 
  type
  (  						
      							    	 
     t
       type
       params=
       (
       
        
        par
       										 
       )
       cstrs =
       (
       )
       kind =
       par
       
       														  
       														 
    											   
  								        
  )
                                     
  module  M
   struct
   (
   							  
   let
   (
    
     x
     (
      Obj.magic
      (
          ()
      ) 
      :
      <[<"m","polytype2"(["a"],"typexprConstr1"("tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typeConstr"([],"t")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>],[]>
     )
    							    		    
   )
   							  
   )
   							  
   signature
   (
   		    				
    sig_value x
    value_description
    <[<"m","polytype2"(["a"],"tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>],[]>
    (
    )
        								
   		    				
   )
  										    
                                     
  let
  (
   
    ident
   (
    case
        (
    	  v
         v
        )
   )
       		    
  )
                                     
  class
  (
      								   
    params = 
    (
        	
    )
    class name = alias
    class expr = 
                class_structure
                (
                    								
                   method alias
                   	ident
                   	poly
                   	                      				 'a 
                   	 arrow
                   	 
                   	  t
                   	  (
                   	    a
                   	  )
                   	  
                   	     									
                   	 a
                   	    								   
                   	                                    
                       												 
                    								
                )
                    								
        	
      								   
  )
      								   
                                     
)