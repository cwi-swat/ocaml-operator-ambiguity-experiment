(
  type
  (
    error
      type
        params =
          (
          )
        cstrs =
          (
          )
        kind =
            (
              Unbound
                (
                     string
                    (
                    )
                )
                            )
            )
  exception Error
  (
       error
      (
      )
  )
  let
  (
    tbl_ident
      (
      Hashtbl.create
      (
          57
      )
      :
           Hashtbl.t
          (
               string
              (
              )
               Ident.t
              (
              )
          )
            )
  )
  let
  (
    bind_ident
      (
        case
        (
          s
          let
          (
            (
              id
                Ident.create
                (
                    s
                )
            )
          in
            sequence
            (
              Hashtbl.add
              (
                  tbl_ident
                  s
                  id
              )
            ;
              id
            )
          )
        )
      )
  )
  let
  (
    find_ident
      (
        case
        (
          s
          try
          Hashtbl.find
          (
              tbl_ident
              s
          )
          (
            case
            (
              Not_found
                            raise
              (
                  Error
                    Unbound
                      s
              )
            )
          )
        )
      )
  )
  let
  (
    unbind_ident
      (
        case
        (
          id
          Hashtbl.remove
          (
              tbl_ident
              Ident.name
              (
                  id
              )
          )
        )
      )
  )
  let
  (
    report_error
      (
        case
        (
          Unbound
            s
          sequence
          (
            prerr_string
            (
                "Unbound identifier "
            )
          ;
            sequence
            (
              prerr_string
              (
                  s
              )
            ;
              prerr_endline
              (
                  "."
              )
            )
          )
        )
      )
  )
)

