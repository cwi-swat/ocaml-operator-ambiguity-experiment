toplevels 
(
     open Tscanf2_io
     let
     (
       ib
        Scanf.Scanning
           							     .from_channel
       (
           stdin
       ) 
     )
     let
     (
       ob
       Buffer.create
       (
           1024
       ) 
      oc
      stdout 
     )
     let
     (
       send_string_pong
      (
       case
           (
       	  ob
            send_string
            (
                ob
                oc
                "-pong"
            )
           )
      )
     )
     let
     (
       send_string_okbye
      (
       case
           (
       	  ob
            send_string
            (
                ob
                oc
                "OK, bye!"
            )
           )
      )
     )
    whileloop 
    (
        true
        let
        (
         (
           s
           receive_string
           (
               ib
           ) 
         )
        in
          match
          s
          (
          case
          (
            " Ping"
            sequence
            (
              Printf.eprintf
              (
                  "-pong"
              )
            ;
              sequence
              (
                flush
                (
                    stderr
                )
              ;
                send_string_pong
                (
                    ob
                )
              )
            )
          ) 
            case
            (
             "stop"
             sequence
             (
               Printf.eprintf
               (
                   "!\n"
               )
             ;
               sequence
               (
                 flush
                 (
                     stderr
                 )
               ;
                 sequence
                 (
                   send_string_okbye
                   (
                       ob
                   )
                 ;
                   exit
                   (
                       0
                   )
                 )
               )
             )
            )
            case
            (
             s
             failwith
             (
                 ^
                 (
                     "Slave: unbound string "
                     s
                 )
             )
            )
          )
        )
    )
)
