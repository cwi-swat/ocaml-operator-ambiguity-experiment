
(
    							  
  
  							
  							
  (
  case
    (
      
      x
      (
          										  
       
       	x
       	poly
       	
       	int
       	(
       	)
       									  
       	                                       
       									
          										  
      )
          										  
          										   
      
      							
      							
      (
      case
        (
          y
          
          (
            case
            (
             z
             
             
             (
              brackets2 
              (
                  y
                  a
              )
                 					   
             	brackets2 
             	(
             	    x
             	    a
             	)
                 					   
             	brackets2 
             	(
             	    z
             	    a
             	)
                 					   
             )
            )
          )
          													 
        )
      )													
      									        	   		
      							
    )
  )													
  									        	   		
  							
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          method f
          	  
          	  (
          	  new c
          	  (
          	      ()
          	  )
          	  :
          	  
          	   c
          	   (
          	     
          	     int
          	     (
          	     )
          	     								  
          	   )
          	      									
          	  )
          	      								
             	
              											  
           								
       )
       
           								
       
     										    	
       								   
     params = 
     (
      "a"
     )
     class name = d
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      
                      a
                      											   
                      c
                      											   
                      ()
                  )
           (
           )
          										    
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          method f
          (
            case
          	(
          		
          		x
          		a
          		    										   
            	()
          	)
          )
          											 
           								
       )
       
           								
       
     										    	
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      
                      a
                      											   
                      c
                      											   
                      ()
                  )
           (
           )
          										    
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
       )
       
           								
       
     									    	
       								   
     params = 
     (
      "a"
     )
     class name = d
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	typexprHash1 
          	(
          	    c
          	)
          )
          										   
           								
          method f
          (
            case
          	(
          		
          		x
          		typexprHash1 
          		(
          		    c
          		)
          		    										   
            	
            	(
            	send x
            	(
            	 x
            	)
            	    						  
            	:
            	
            	int
            	(
            	)
            									  
            	)
            	    								
          	)
          )
          											 
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	
          	int
          	(
          	)
          									  
          )
          										   
           								
       )
       
           								
       
     										    	
       								   
     params = 
     (
      "a"
     )
     class name = d
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	c
          	(
          	  b
          	)
          )
          										   
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       
       x
       a
           										   
     										    	
       class_structure
       (
           								
          a
          (
          	b
          )
          										   
           								
          method f
          	  self
             	
              											  
           								
       )
       <"patternValueName"("self")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],["tagg"("b")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]]>
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  new c
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = x
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method f
             poly
             
             int
             (
             )
             								  
                                                    
              									
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       
       
       x
       a
           										   
       (
           										  
        
        	f
        	poly
        	
        	int
        	(
        	)
        									  
        	                                       
        									
           										  
       )
           										  
           										   
     									    	
       class_structure
       (
           								
       )
       <"anyPattern"()[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],["tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]]>
           								
       
     									    	
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       x
     									    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      c
                      x
                  )
           (
           )
          										    
           								
          method g
          	  true
             	
              											  
           								
       )
       <"anyPattern"()[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],["tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]]>
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	
          	int
          	(
          	)
          									  
          )
          										   
           								
          method f
          (
            case
          	(
          		x
            	
            	(
            	x
            	:
            	
            	 c
            	 (
            	   
            	   bool
            	   (
            	   )
            	   								  
            	 )
            	    									
            	)
            	    								
          	)
          )
          											 
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
      "b"
      										
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	arrow
          	
          	int
          	(
          	)
          									  
          	c
          	   								   
          )
          										   
           								
          b
          (
          	tuple
          	(
          	 a
          	   									
          	  (
          	      										  
          	   
          	   	x
          	   	poly
          	   	b
          	   	                                       
          	   									
          	      										  
          	  )
          	      										  
          										
          	  c
          										
          	  d
          										
          	)
          	   								    
          )
          										   
           								
          method f
          (
            case
          	(
          		
          		x
          		a
          		    										   
          		(
          			case
          			(		
            		
            		   
            		   y
            		   b
            		       										   
            		   ()
            													 
          			)
          		)
          	)
          )
              												 
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
      "b"
      										
     )
     class name = d
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      
                      a
                      											   
                      b
                      											   
                      c
                      											   
                      ()
                  )
           (
           )
          										    
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   let
   (
    
     x
     ref
     (
         []
     ) 
    							    		    
   )
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          method f
          	  
          	  (
          	  x
          	  :
          	  a
          	  )
          	      								
             	
              											  
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      c
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
         
         	g
         	poly
         	
         	 d
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								         
      d
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   
         	   int
         	   (
         	   )
         	   								  
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      c
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
         
         	g
         	poly
         	
         	 d
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								         
      d
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      c
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   a
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								         
      d
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	f
         	poly
         	
         	 c
         	 (
         	   
         	   int
         	   (
         	   )
         	   								  
         	 )
         	    									
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      u
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	x
         	poly
         	a
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								         
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        
         u
         (
           
            t
            (
              a
            )
               									
         )
            									
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      u
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        a
        														 
     											   
   								         
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        
         u
         (
           
            t
            (
              a
            )
               									
         )
            									
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      u
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        a
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      t
        type
        params=
        (
        
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        tuple
        (
         
          u
          (
            
            t
            (
            )
            								  
          )
             									
           									
          
           u
           (
             
             t
             (
             )
             								  
           )
              									
        									
        )
           								    
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      t
        type
        params=
        (
        
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        a
        (
            										  
         
         	x
         	poly
         	a
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   type
   (  						
       							    	 
      u
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        a
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
  							
  							
  (
  case
    (
      
      x
      
      t
      (
      )
      								  
          										   
      
      (
        case
        (
         
         y
         
          u
          (
            a
          )
             									
             										   
         
         =
         (
             x
             y
         )
        )
      )
      													 
    )
  )													
  									        	   		
  							
                                 
  
  							
  							
  (
  case
    (
      
      x
      
      t
      (
      )
      								  
          										   
      
      (
        case
        (
         
         y
         
          u
          (
            a
          )
             									
             										   
         
         =
         (
             y
             x
         )
        )
      )
      													 
    )
  )													
  									        	   		
  							
                                 
  
      									 
   module  M
    struct
    (
    							  
    class
    (
        								   
      params = 
      (
       "a"
       "b"
       										
      )
      class name = c
      class expr = 
      										    	
        
        x
        
        int
        (
        )
        								  
            										   
      										    	
        
        y
        b
            										   
      										    	
        class_structure
        (
            								
           a
           (
           	arrow
           	
           	int
           	(
           	)
           									  
           	
           	bool
           	(
           	)
           									  
           	   								   
           )
           										   
            								
            x
            []
              											 
            								
            y
            y
              											 
            								
           method f
           (
             case
           	(
           		
           		x
           		a
           		    										   
             	()
           	)
           )
           											 
            								
           method g
           	  y
              	
               											  
            								
        )
        
            								
        
      										    	
        								   
    )
        								   
    							  
    )
    							  
    
   										    
      									 
      									 
                                 
  
      									 
   module  M'
    
    M
    signature
    (
    		    				
     
       sig_class
        (
       	class_description
       	params = 
       		(
       										
       		   "a"
       		   "b"
       		   										
       										 
       		)
       	name = c
       	expr =
       	
       										 
       		class_type
       		signature
       		class_signature
       		(
       												 
       		 a
       		 arrow
       		 
       		 int
       		 (
       		 )
       		 								  
       		 
       		 bool
       		 (
       		 )
       		 								  
       		    								   
       												 
       		 x
       		 poly
       		 
       		  list
       		  (
       		    
       		    float
       		    (
       		    )
       		    								  
       		  )
       		     									
       		                                        
       												 
       		 y
       		 poly
       		 b
       		                                        
       												 
       		 poly
       		 arrow
       		 a
       		 
       		 unit
       		 (
       		 )
       		 								  
       		    								   
       		                                        
       												 
       		 poly
       		 b
       		                                        
       												 
       		)
       												 
       										 
        )
       										
     											
     										    
    		    				
    )
        									 
    
   										    
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
      "b"
      										
     )
     class name = d
     class expr = 
     										    	
       ()
     										    	
       y
     										    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      
                      a
                      											   
                      b
                      											   
                      M.c
                      											   
                      7
                      y
                  )
           (
           )
          										    
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
      "b"
      										
     )
     class name = e
     class expr = 
     										    	
       ()
     										    	
       y
     										    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      
                      a
                      											   
                      b
                      											   
                      M'.c
                      											   
                      1
                      y
                  )
           (
           )
          										    
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  send g
  (
   new M.c
   (
       3
       "a"
   )
  )
      						  
                                 
  send g
  (
   new d
   (
       ()
       10
   )
  )
      						  
                                 
  send g
  (
   new e
   (
       ()
       7.1
   )
  )
      						  
                                 
  
      									 
   open M
      									 
      									 
                                 
  send g
  (
   new c
   (
       5
       true
   )
  )
      						  
                                 
  
      									 
   module  M
    struct
    (
    							  
    class
    (
        								   
      params = 
      (
       "a"
      )
      class name = c
      class expr = 
      										    	
        ()
      										    	
        class_structure
        (
            								
           method f
           (
             case
           	(
           		
           		x
           		a
           		    										   
             	()
           	)
           )
           											 
            								
        )
        
            								
        
      										    	
        								   
    )
        								   
    							  
    )
    							  
    
   										    
      									 
      									 
                                 
  
      									 
   module  M'
    
    M
    signature
    (
    		    				
     
       sig_class
        (
       	class_description
       	params = 
       		(
       										
       		   "a"
       										 
       		)
       	name = c
       	expr =
       	
       										 
       		
       		
       		unit
       		(
       		)
       										  
       										 
       		class_type
       		signature
       		class_signature
       		(
       												 
       		 poly
       		 arrow
       		 a
       		 
       		 unit
       		 (
       		 )
       		 								  
       		    								   
       		                                        
       												 
       		)
       												 
       										 
        )
       										
     											
     										    
    		    				
    )
        									 
    
   										    
      									 
      									 
                                 
  
  (
    case
    (
     x
     
     brackets2 
     (
         x
         M.c
         (
           a
         )
     )
    )
  )
  													 
                                 
  
  (
    case
    (
     x
     
     brackets2 
     (
         x
         M'.c
         (
           a
         )
     )
    )
  )
  													 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       
       x
       c
       (
         b
       )
           										   
     										    	
       class_structure
       (
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       
       x
       c
       (
         b
       )
           										   
     										    	
       class_structure
       (
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method f
          	  1
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method f
          	  2
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = e
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      c
                      ()
                  )
           (
           )
          										    
           								
          inherit
           constr classArgs 
                  (
                      d
                      ()
                  )
           (
           )
          										    
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  send f
  (
   new e
   (
       ()
   )
  )
      						  
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
           x
           -true
             											 
           								
           y
           ~-.
           (
             ()
           )
               								  
             											 
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method f
          	  1
             	
              											  
           								
          method g
          	  1
             	
              											  
           								
          method h
          	  1
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method h
          	  2
             	
              											  
           								
          method i
          	  2
             	
              											  
           								
          method j
          	  2
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = e
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method f
          	  3
             	
              											  
           								
          inherit
           constr classArgs 
                  (
                      c
                      ()
                  )
           (
           )
          										    
           								
          method g
          	  3
             	
              											  
           								
          method i
          	  3
             	
              											  
           								
          inherit
           constr classArgs 
                  (
                      d
                      ()
                  )
           (
           )
          										    
           								
          method j
          	  3
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   let
   (
    
     e
     new e
     (
         ()
     ) 
    							    		    
   )
      									 
      									 
                                 
  
  (
   send f
   (
    e
   )
       						  
      					   
  	send g
  	(
  	 e
  	)
  	    						  
      					   
  	send h
  	(
  	 e
  	)
  	    						  
      					   
  	send i
  	(
  	 e
  	)
  	    						  
      					   
  	send j
  	(
  	 e
  	)
  	    						  
      					   
  )
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       a
     									    	
       class_structure
       (
           								
           x
           1
             											 
           								
           y
           1
             											 
           								
           z
           1
             											 
           								
           a
           a
             											 
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       b
     									    	
       class_structure
       (
           								
           z
           2
             											 
           								
           t
           2
             											 
           								
           u
           2
             											 
           								
           b
           b
             											 
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = e
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
           x
           3
             											 
           								
          inherit
           constr classArgs 
                  (
                      c
                      5
                  )
           (
           )
          										    
           								
           y
           3
             											 
           								
           t
           3
             											 
           								
          inherit
           constr classArgs 
                  (
                      d
                      7
                  )
           (
           )
          										    
           								
           u
           3
             											 
           								
          method x
          	  x
             	
              											  
           								
          method y
          	  y
             	
              											  
           								
          method z
          	  z
             	
              											  
           								
          method t
          	  t
             	
              											  
           								
          method u
          	  u
             	
              											  
           								
          method a
          	  a
             	
              											  
           								
          method b
          	  b
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   let
   (
    
     e
     new e
     (
         ()
     ) 
    							    		    
   )
      									 
      									 
                                 
  
  (
   send x
   (
    e
   )
       						  
      					   
  	send y
  	(
  	 e
  	)
  	    						  
      					   
  	send z
  	(
  	 e
  	)
  	    						  
      					   
  	send t
  	(
  	 e
  	)
  	    						  
      					   
  	send u
  	(
  	 e
  	)
  	    						  
      					   
  	send a
  	(
  	 e
  	)
  	    						  
      					   
  	send b
  	(
  	 e
  	)
  	    						  
      					   
  )
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       
       x
       
       int
       (
       )
       								  
           										   
     									    	
       
       y
       
       int
       (
       )
       								  
           										   
     									    	
       class_structure
       (
           								
           x
           x
             											 
           								
           y
           y
             											 
           								
          method x
          	  x
             	
              											  
           								
          method y
          	  y
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       x
     									    	
       y
     									    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      c
                      x
                      y
                  )
           (
           )
          										    
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
  let
  (
   (
      									  
    
     c
     new c
     (
         1
         2
     ) 
    							    		   
      									  
   )
  in
    
    (
     send x
     (
      c
     )
         						  
        					   
    	send y
    	(
    	 c
    	)
    	    						  
        					   
    )
  )
      									
                                 
  
  let
  (
   (
      									  
    
     d
     new d
     (
         1
         2
     ) 
    							    		   
      									  
   )
  in
    
    (
     send x
     (
      d
     )
         						  
        					   
    	send y
    	(
    	 d
    	)
    	    						  
        					   
    )
  )
      									
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       
       x
       a
           										   
     										    	
       class_structure
       (
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  new c
                                 
  
      									 
   module  M
    struct
    (
    							  
    class
    (
        								   
      params = 
      (
      )
      class name = c
      class expr = 
      									    	
        ()
      									    	
        class_structure
        (
            								
            x
            1
              											 
            								
           method xc
           	  x
              	
               											  
            								
        )
        
            								
        
      									    	
        								   
    )
        								   
    							  
    )
    							  
    signature
    (
    		    				
     
       sig_class
        (
       	class_description
       	params = 
       		(
       										 
       		)
       	name = c
       	expr =
       	
       										 
       		
       		
       		unit
       		(
       		)
       										  
       										 
       		class_type
       		signature
       		class_signature
       		(
       												 
       		 poly
       		 
       		 int
       		 (
       		 )
       		 								  
       		                                        
       												 
       		)
       												 
       										 
        )
       										
     											
     										    
    		    				
    )
   										    
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
           x
           2
             											 
           								
          method xd
          	  x
             	
              											  
           								
          inherit
           constr classArgs 
                  (
                      M.c
                      ()
                  )
           (
           )
          										    
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
  let
  (
   (
      									  
    
     d
     new d
     (
         ()
     ) 
    							    		   
      									  
   )
  in
    
    (
     send xc
     (
      d
     )
         						  
        					   
    	send xd
    	(
    	 d
    	)
    	    						  
        					   
    )
  )
      									
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = matrix
     class expr = 
     										    	
       
       
       (
        sz
            						 
       	init
       
       )
       tuple
       (
        
        int
        (
        )
        								  
          									
         a
       									
       )
          								    
           										   
     										    	
       class_structure
       (
           								
           m
           Array.create_matrix
           (
               sz
               sz
               init
           )
             											 
           								
          method add
          (
            case
          	(
          		
          		mtx
          		
          		 matrix
          		 (
          		   a
          		 )
          		    									
          		    										   
            	
            	(
            	Array.get
            	(
            	 Array.get
            	 (
            	  send m
            	  (
            	   mtx
            	  )
            	      						  
            	  0
            	 )
            	 												
            	 0
            	)
            													
            	:
            	a
            	)
            	    								
          	)
          )
          											 
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method m
          	  new c
          	  (
          	      ()
          	  )
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  send m
  (
   new c
   (
       ()
   )
  )
      						  
                                 
  
      									 
   module  M
    struct
    (
    							  
    class
    (
        								   
      params = 
      (
      )
      class name = c
      class expr = 
      									    	
        ()
      									    	
        class_structure
        (
            								
           method m
           	  new c
           	  (
           	      ()
           	  )
              	
               											  
            								
        )
        
            								
        
      									    	
        								   
    )
        								   
    							  
    )
    							  
    
   										    
      									 
      									 
                                 
  send m
  (
   new M.c
   (
       ()
   )
  )
      						  
                                 
  
      									 
   type
   (  						
       							    	 
      uu
        type
        params=
        (
        
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
        
        (
        								  
        A
        (
        									
         
         int
         (
         )
         								  
        								     
        )
        								    
        								  
        B
        (
        									
         a
         (
             										  
          
          	leq
          	poly
          	a
          	                                       
          									
             										  
         )
             										  
        								     
        )
        								    
        								  
        )
        								   
        
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method m
             poly
             a
                                                    
              									
           								
       )
       <"anyPattern"()[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],["tagg"("a")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]]>
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   module  S
    
    struct
    (
    							  
    let
    (
     
      f
     (
      case
          (
      	  
      	  x
      	  typexprHash1 
      	  (
      	      c
      	  )
      	      										   
           x
          )
     )
         		    
    )
    							  
    )
    							  
    signature
    (
    		    				
     sig_value f
     value_description
     arrow
     a
     typexprHash1 
     (
         c
     )
     a
        								   
     (
     )
         								
    		    				
    )
        									 
    
   										    
      									 
      									 
                                 
  
      									 
   module  S
    
    struct
    (
    							  
    let
    (
     
      f
     (
      case
          (
      	  
      	  x
      	  typexprHash1 
      	  (
      	      c
      	  )
      	      										   
           x
          )
     )
         		    
    )
    							  
    )
    							  
    signature
    (
    		    				
     sig_value f
     value_description
     arrow
     typexprHash1 
     (
         c
     )
     typexprHash1 
     (
         c
     )
        								   
     (
     )
         								
    		    				
    )
        									 
    
   										    
      									 
      									 
                                 
  
      									 
   module  M
    struct
    (
    							  
    type
    (  						
        							    	 
       t
         type
         params=
         (
         
         )
         cstrs =
         (
      											   
      											   	  
      											   
         )
         kind =
         
          
         
         int
         (
         )
         								  
         														 
      											   
    								        
    )
    							  
    class
    (
        								   
      params = 
      (
      )
      class name = t
      class expr = 
      									    	
        ()
      									    	
        class_structure
        (
            								
        )
        
            								
        
      									    	
        								   
    )
        								   
    							  
    )
    							  
    
   										    
      									 
      									 
                                 
  
  (
    case
    (
     x
     
     brackets2 
     (
         x
         a
         (
             										  
          
          	m
          	poly
          	arrow
          	a
          	a
          	   								   
          	                                       
          									
             										  
         )
             										  
     )
    )
  )
  													 
                                 
  
  (
    case
    (
     x
     
     
     (
       x
       :
       arrow
       
       int
       (
       )
       								  
       
       bool
       (
       )
       								  
          								   
       arrow
       a
       a
          								   
     )
         									
    )
  )
  													 
                                 
  
  (
    case
    (
     x
     
     
     (
       x
       :
       arrow
       
       int
       (
       )
       								  
       
       bool
       (
       )
       								  
          								   
       arrow
       
       int
       (
       )
       								  
       
       int
       (
       )
       								  
          								   
     )
         									
    )
  )
  													 
                                 
  
  (
    case
    (
     x
     
     
     (
       x
       :
       typexprEmptyAngleBrackets 
       (
           
       )
       typexprEmptyAngleBrackets 
       (
           
       )
     )
         									
    )
  )
  													 
                                 
  
  (
    case
    (
     x
     
     
     (
       x
       :
       typexprEmptyAngleBrackets 
       (
           
       )
       typexprEmptyAngleBrackets 
       (
           
       )
     )
         									
    )
  )
  													 
                                 
  
      									 
   let
   (
    
     x
     ref
     (
         []
     ) 
    							    		    
   )
      									 
      									 
                                 
  
      									 
   module  F
   functor X
   (
    signature
    (
    		    				
    )
    
    	struct
    	(
    								  
    	type
    	(  						
    	    							    	 
    	   t
    	     type
    	     params=
    	     (
    	     
    	     )
    	     cstrs =
    	     (
    	  											   
    	  											   	  
    	  											   
    	     )
    	     kind =
    	     
    	      
    	     
    	     int
    	     (
    	     )
    	     								  
    	     														 
    	  											   
    									        
    	)
    								  
    	
    	 
    	 
    	 (
    	 x
    	 :
    	 
    	  ref
    	  (
    	    
    	     list
    	     (
    	       (
    	           										  
    	        
    	        	m
    	        	poly
    	        	
    	        	t
    	        	(
    	        	)
    	        									  
    	        	                                       
    	        									
    	           										  
    	       )
    	           										  
    	     )
    	        									
    	  )
    	     									
    	 )
    	     								 
    								    		    
    								  
    	)
    								  
    	
        								 
   )
       										    
      									 
      									 
                                 
  x
                                 
  
      									 
   type
   (  						
       							    	 
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
  (
    case
    (
     
     x
     a
     
      t
      (
        a
      )
         									
         										   
     
     ()
    )
  )
  													 
                                 
  
  (
    case
    (
     
     x
     
      t
      (
        a
      )
         									
         										   
     
     
     sequence
     (
       
       (
       x
       :
       a
       )
           								
     ;
       ()
     )
         							
    )
  )
  													 
                                 
  
      									 
   type
   (  						
       							    	 
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
     											   
     											   	  
     											   
        )
        kind =
        
         
        (
            										  
         
         	x
         	poly
         	a
         	                                       
         									
            										  
        )
            										  
        														 
     											   
   								        
   )
      									 
      									 
                                 
  
  (
    case
    (
     
     x
     a
     
      t
      (
        a
      )
         									
         										   
     
     ()
    )
  )
  													 
                                 
  
  (
    case
    (
     
     x
     
      t
      (
        a
      )
         									
         										   
     
     
     sequence
     (
       
       (
       x
       :
       a
       )
           								
     ;
       ()
     )
         							
    )
  )
  													 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	arrow
          	typexprEmptyAngleBrackets 
          	(
          	    
          	)
          	
          	unit
          	(
          	)
          									  
          	   								   
          )
          										   
           								
          method m
          	  
          	  (
          	  
          	  (
          	    case
          	    (
          	     x
          	     
          	     ()
          	    )
          	  )
          	  													 
          	  :
          	  a
          	  )
          	      								
             	
              											  
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
      "a"
     )
     class name = c
     class expr = 
     										    	
       ()
     										    	
       class_structure
       (
           								
          a
          (
          	arrow
          	
          	unit
          	(
          	)
          									  
          	typexprEmptyAngleBrackets 
          	(
          	    
          	)
          	   								   
          )
          										   
           								
          method m
          (
            case
          	(
          		
          		f
          		a
          		    										   
            	f
            	(
            	    ()
            	)
          	)
          )
          											 
           								
       )
       
           								
       
     										    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method m
          	  1
             	
              											  
           								
          method n
          	  send m
          	  (
          	   self
          	  )
          	      						  
             	
              											  
           								
       )
       <"patternValueName"("self")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],[]>
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = d
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          inherit
           constr classArgs 
                  (
                      c
                      ()
                  )
           (
           )
          										    
           								
          method o
          	  send m
          	  (
          	   self
          	  )
          	      						  
             	
              											  
           								
       )
       <"patternValueName"("self")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],[]>
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  
  let
  (
   (
      									  
    
     x
     new d
     (
         ()
     ) 
    							    		   
      									  
   )
  in
    
    (
     send n
     (
      x
     )
         						  
        					   
    	send o
    	(
    	 x
    	)
    	    						  
        					   
    )
  )
      									
                                 
  
      									 
   class
   (
       								   
     params = 
     (
     )
     class name = c
     class expr = 
     									    	
       ()
     									    	
       class_structure
       (
           								
          method m
             poly
             
             int
             (
             )
             								  
                                                    
              									
           								
          method m
          	  1
             	
              											  
           								
       )
       
           								
       
     									    	
       								   
   )
       								   
      									 
      									 
                                 
  Oo.id
  (
      class_structure
      (
          								
      )
      
          								
  )
                                 
  Oo.id
  (
      class_structure
      (
          								
      )
      
          								
  )
                                 
  Oo.id
  (
      class_structure
      (
          								
      )
      
          								
  )
                                 
  
  let
  (
   (
      									  
    
     o
     class_structure
     (
         								
     )
     
         								 
    							    		   
      									  
   )
  in
    
    let
    (
     (
        									  
      
       s
       Marshal.to_string
       (
           o
           []
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         o'
         (
          Marshal.from_string
          (
              s
              0
          ) 
          :
          typexprEmptyAngleBrackets 
          (
              
          )
         )
        							    		   
          									  
       )
      in
        
        let
        (
         (
            									  
          
           o''
           (
            Marshal.from_string
            (
                s
                0
            ) 
            :
            typexprEmptyAngleBrackets 
            (
                
            )
           )
          							    		   
            									  
         )
        in
          
          (
           Oo.id
           (
               o
           )
              					   
          	Oo.id
          	(
          	    o'
          	)
              					   
          	Oo.id
          	(
          	    o''
          	)
              					   
          )
        )
            									
      )
          									
    )
        									
  )
      									
                                 
  
  let
  (
   (
      									  
    
     o
     class_structure
     (
         								
         x
         33
           											 
         								
        method m
        	  x
           	
            											  
         								
     )
     
         								 
    							    		   
      									  
   )
  in
    
    let
    (
     (
        									  
      
       s
       Marshal.to_string
       (
           o
           ::
            (
            Marshal.Closures
            []
            ) 
               						  
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         o'
         (
          Marshal.from_string
          (
              s
              0
          ) 
          :
          (
              										  
           
           	m
           	poly
           	
           	int
           	(
           	)
           									  
           	                                       
           									
              										  
          )
              										  
         )
        							    		   
          									  
       )
      in
        
        let
        (
         (
            									  
          
           o''
           (
            Marshal.from_string
            (
                s
                0
            ) 
            :
            (
                										  
             
             	m
             	poly
             	
             	int
             	(
             	)
             									  
             	                                       
             									
                										  
            )
                										  
           )
          							    		   
            									  
         )
        in
          
          (
           Oo.id
           (
               o
           )
              					   
          	Oo.id
          	(
          	    o'
          	)
              					   
          	Oo.id
          	(
          	    o''
          	)
              					   
          	send m
          	(
          	 o
          	)
          	    						  
              					   
          	send m
          	(
          	 o'
          	)
          	    						  
              					   
          )
        )
            									
      )
          									
    )
        									
  )
      									
                                 
  
  let
  (
   (
      									  
    
     o
     class_structure
     (
         								
         x
         33
           											 
         								
         y
         44
           											 
         								
        method m
        	  x
           	
            											  
         								
     )
     
         								 
    							    		   
      									  
   )
  in
    
    let
    (
     (
        									  
      
       s
       Marshal.to_string
       (
           o
           ::
            (
            Marshal.Closures
            []
            ) 
               						  
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         o'
         (
          Marshal.from_string
          (
              s
              0
          ) 
          :
          (
              										  
           
           	m
           	poly
           	
           	int
           	(
           	)
           									  
           	                                       
           									
              										  
          )
              										  
         )
        							    		   
          									  
       )
      in
        
        let
        (
         (
            									  
          
           o''
           (
            Marshal.from_string
            (
                s
                0
            ) 
            :
            (
                										  
             
             	m
             	poly
             	
             	int
             	(
             	)
             									  
             	                                       
             									
                										  
            )
                										  
           )
          							    		   
            									  
         )
        in
          
          (
           Oo.id
           (
               o
           )
              					   
          	Oo.id
          	(
          	    o'
          	)
              					   
          	Oo.id
          	(
          	    o''
          	)
              					   
          	send m
          	(
          	 o
          	)
          	    						  
              					   
          	send m
          	(
          	 o'
          	)
          	    						  
              					   
          )
        )
            									
      )
          									
    )
        									
  )
      									
                                 
)