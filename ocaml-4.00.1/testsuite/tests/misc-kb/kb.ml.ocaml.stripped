(
  open Terms
  open Equations
  let
  (
    super
      (
        case
        (
          m
          (
            case
            (
              alias n
              (
                Term
                  (
                    _
                    sons
                  )
              )
              let
              (
                (
                  collate
                    (
                      case
                      (
                        n
                        (
                          case
                          (
                            []
                                                        []
                                                      )
                          case
                          (
                            ::
                              (
                                son
                                rest
                              )
                            @
                            (
                                List.map
                                (
                                    (
                                      case
                                      (
                                        (
                                          u
                                          subst
                                        )
                                        (
                                          ::
                                            (
                                              n
                                              u
                                            )
                                          subst
                                        )
                                      )
                                    )
                                    super
                                    (
                                        m
                                        son
                                    )
                                )
                                collate
                                (
                                    +
                                    (
                                        n
                                        1
                                    )
                                    rest
                                )
                            )
                          )
                        )
                      )
                    )
                )
              in
                let
                (
                  (
                    insides
                      collate
                      (
                          1
                          sons
                      )
                  )
                in
                  try
                  ::
                    (
                      (
                        []
                                                unify
                        (
                            m
                            n
                        )
                      )
                      insides
                    )
                  (
                    case
                    (
                      Failure
                        _
                      insides
                    )
                  )
                )
              )
            )
            case
            (
              _
              []
                          )
          )
        )
      )
  )
  let
  (
    super_strict
      (
        case
        (
          m
          (
            case
            (
              Term
                (
                  _
                  sons
                )
              let
              (
                (
                  collate
                    (
                      case
                      (
                        n
                        (
                          case
                          (
                            []
                                                        []
                                                      )
                          case
                          (
                            ::
                              (
                                son
                                rest
                              )
                            @
                            (
                                List.map
                                (
                                    (
                                      case
                                      (
                                        (
                                          u
                                          subst
                                        )
                                        (
                                          ::
                                            (
                                              n
                                              u
                                            )
                                          subst
                                        )
                                      )
                                    )
                                    super
                                    (
                                        m
                                        son
                                    )
                                )
                                collate
                                (
                                    +
                                    (
                                        n
                                        1
                                    )
                                    rest
                                )
                            )
                          )
                        )
                      )
                    )
                )
              in
                collate
                (
                    1
                    sons
                )
              )
            )
            case
            (
              _
              []
                          )
          )
        )
      )
  )
  let
  (
    critical_pairs
      (
        case
        (
          (
            l1
            r1
          )
          (
            case
            (
              (
                l2
                r2
              )
              let
              (
                (
                  mk_pair
                    (
                      case
                      (
                        (
                          u
                          subst
                        )
                        (
                          substitute
                          (
                              subst
                              replace
                              (
                                  l2
                                  u
                                  r1
                              )
                          )
                          substitute
                          (
                              subst
                              r2
                          )
                        )
                      )
                    )
                )
              in
                List.map
                (
                    mk_pair
                    super
                    (
                        l1
                        l2
                    )
                )
              )
            )
          )
        )
      )
  )
  let
  (
    strict_critical_pairs
      (
        case
        (
          (
            l1
            r1
          )
          (
            case
            (
              (
                l2
                r2
              )
              let
              (
                (
                  mk_pair
                    (
                      case
                      (
                        (
                          u
                          subst
                        )
                        (
                          substitute
                          (
                              subst
                              replace
                              (
                                  l2
                                  u
                                  r1
                              )
                          )
                          substitute
                          (
                              subst
                              r2
                          )
                        )
                      )
                    )
                )
              in
                List.map
                (
                    mk_pair
                    super_strict
                    (
                        l1
                        l2
                    )
                )
              )
            )
          )
        )
      )
  )
  let
  (
    mutual_critical_pairs
      (
        case
        (
          eq1
          (
            case
            (
              eq2
              @
              (
                  strict_critical_pairs
                  (
                      eq1
                      eq2
                  )
                  critical_pairs
                  (
                      eq2
                      eq1
                  )
              )
            )
          )
        )
      )
  )
  let
  (
    rename
      (
        case
        (
          n
          (
            case
            (
              (
                t1
                t2
              )
              let
              (
                (
                  ren_rec
                    (
                      case
                      (
                        Var
                          k
                        Var
                          +
                          (
                              k
                              n
                          )
                      )
                      case
                      (
                        Term
                          (
                            op
                            sons
                          )
                        Term
                          (
                            op
                            List.map
                            (
                                ren_rec
                                sons
                            )
                          )
                      )
                    )
                )
              in
                (
                  ren_rec
                  (
                      t1
                  )
                  ren_rec
                  (
                      t2
                  )
                )
              )
            )
          )
        )
      )
  )
  let
  (
    deletion_message
      (
        case
        (
          rule
          sequence
          (
            print_string
            (
                "Rule "
            )
          ;
            sequence
            (
              print_int
              (
                  field
                  (
                  rule
                  number
                  )
              )
            ;
              sequence
              (
                print_string
                (
                    " deleted"
                )
              ;
                print_newline
                (
                    ()
                                    )
              )
            )
          )
        )
      )
  )
  let
  (
    non_orientable
      (
        case
        (
          (
            m
            n
          )
          sequence
          (
            pretty_term
            (
                m
            )
          ;
            sequence
            (
              print_string
              (
                  " = "
              )
            ;
              sequence
              (
                pretty_term
                (
                    n
                )
              ;
                print_newline
                (
                    ()
                                    )
              )
            )
          )
        )
      )
  )
  let
  (
    partition
      (
        case
        (
          p
          (
            case
            (
              []
                            (
                []
                                []
                              )
            )
            case
            (
              ::
                (
                  x
                  l
                )
              let
              (
                (
                  (
                    l1
                    l2
                  )
                    partition
                    (
                        p
                        l
                    )
                )
              in
                ifthenelse
                (
                  if
                  (
                    p
                    (
                        x
                    )
                  )
                  then
                  (
                    (
                      ::
                        (
                          x
                          l1
                        )
                      l2
                    )
                  )
                  else
                  (
                      (
                        l1
                        ::
                          (
                            x
                            l2
                          )
                      )
                  )
                )
              )
            )
          )
        )
      )
  )
  let
  (
    get_rule
      (
        case
        (
          n
          (
            case
            (
              []
                            raise
              (
                  Not_found
                                )
            )
            case
            (
              ::
                (
                  r
                  l
                )
              ifthenelse
              (
                if
                (
                  =
                  (
                      n
                      field
                      (
                      r
                      number
                      )
                  )
                )
                then
                (
                  r
                )
                else
                (
                    get_rule
                    (
                        n
                        l
                    )
                )
              )
            )
          )
        )
      )
  )
  let
  (
    kb_completion
      (
        case
        (
          greater
          let
          (
            (
              kbrec
                (
                  case
                  (
                    j
                    (
                      case
                      (
                        rules
                        let
                        (
                          (
                            process
                              (
                                case
                                (
                                  failures
                                  (
                                    case
                                    (
                                      (
                                        k
                                        l
                                      )
                                      (
                                        case
                                        (
                                          eqs
                                          match
                                          eqs
                                          (
                                            case
                                            (
                                              []
                                                                                            ifthenelse
                                              (
                                                if
                                                (
                                                  <
                                                  (
                                                      k
                                                      l
                                                  )
                                                )
                                                then
                                                (
                                                  next_criticals
                                                  (
                                                      failures
                                                      (
                                                        +
                                                        (
                                                            k
                                                            1
                                                        )
                                                        l
                                                      )
                                                  )
                                                )
                                                else
                                                (
                                                    ifthenelse
                                                    (
                                                      if
                                                      (
                                                        <
                                                        (
                                                            l
                                                            j
                                                        )
                                                      )
                                                      then
                                                      (
                                                        next_criticals
                                                        (
                                                            failures
                                                            (
                                                              1
                                                              +
                                                              (
                                                                  l
                                                                  1
                                                              )
                                                            )
                                                        )
                                                      )
                                                      else
                                                      (
                                                          match
                                                          failures
                                                          (
                                                            case
                                                            (
                                                              []
                                                                                                                            rules
                                                            )
                                                            case
                                                            (
                                                              _
                                                              sequence
                                                              (
                                                                print_string
                                                                (
                                                                    "Non-orientable equations :"
                                                                )
                                                              ;
                                                                sequence
                                                                (
                                                                  print_newline
                                                                  (
                                                                      ()
                                                                                                                                        )
                                                                ;
                                                                  sequence
                                                                  (
                                                                    List.iter
                                                                    (
                                                                        non_orientable
                                                                        failures
                                                                    )
                                                                  ;
                                                                    failwith
                                                                    (
                                                                        "kb_completion"
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                      )
                                                    )
                                                )
                                              )
                                            )
                                            case
                                            (
                                              ::
                                                (
                                                  (
                                                    m
                                                    n
                                                  )
                                                  eqs
                                                )
                                              let
                                              (
                                                (
                                                  m'
                                                    mrewrite_all
                                                    (
                                                        rules
                                                        m
                                                    )
                                                  n'
                                                    mrewrite_all
                                                    (
                                                        rules
                                                        n
                                                    )
                                                  enter_rule
                                                    (
                                                      case
                                                      (
                                                        (
                                                          left
                                                          right
                                                        )
                                                        let
                                                        (
                                                          (
                                                            new_rule
                                                              mk_rule
                                                              (
                                                                  +
                                                                  (
                                                                      j
                                                                      1
                                                                  )
                                                                  left
                                                                  right
                                                              )
                                                          )
                                                        in
                                                          sequence
                                                          (
                                                            pretty_rule
                                                            (
                                                                new_rule
                                                            )
                                                          ;
                                                            let
                                                            (
                                                              (
                                                                left_reducible
                                                                  (
                                                                    case
                                                                    (
                                                                      rule
                                                                      reducible
                                                                      (
                                                                          left
                                                                          field
                                                                          (
                                                                          rule
                                                                          lhs
                                                                          )
                                                                      )
                                                                    )
                                                                  )
                                                              )
                                                            in
                                                              let
                                                              (
                                                                (
                                                                  (
                                                                    redl
                                                                    irredl
                                                                  )
                                                                    partition
                                                                    (
                                                                        left_reducible
                                                                        rules
                                                                    )
                                                                )
                                                              in
                                                                sequence
                                                                (
                                                                  List.iter
                                                                  (
                                                                      deletion_message
                                                                      redl
                                                                  )
                                                                ;
                                                                  let
                                                                  (
                                                                    (
                                                                      right_reduce
                                                                        (
                                                                          case
                                                                          (
                                                                            rule
                                                                            mk_rule
                                                                            (
                                                                                field
                                                                                (
                                                                                rule
                                                                                number
                                                                                )
                                                                                field
                                                                                (
                                                                                rule
                                                                                lhs
                                                                                )
                                                                                mrewrite_all
                                                                                (
                                                                                    ::
                                                                                      (
                                                                                        new_rule
                                                                                        rules
                                                                                      )
                                                                                    field
                                                                                    (
                                                                                    rule
                                                                                    rhs
                                                                                    )
                                                                                )
                                                                            )
                                                                          )
                                                                        )
                                                                    )
                                                                  in
                                                                    let
                                                                    (
                                                                      (
                                                                        irreds
                                                                          List.map
                                                                          (
                                                                              right_reduce
                                                                              irredl
                                                                          )
                                                                      )
                                                                    in
                                                                      let
                                                                      (
                                                                        (
                                                                          eqs'
                                                                            List.map
                                                                            (
                                                                                (
                                                                                  case
                                                                                  (
                                                                                    rule
                                                                                    (
                                                                                      field
                                                                                      (
                                                                                      rule
                                                                                      lhs
                                                                                      )
                                                                                      field
                                                                                      (
                                                                                      rule
                                                                                      rhs
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                                redl
                                                                            )
                                                                        )
                                                                      in
                                                                        kbrec
                                                                        (
                                                                            +
                                                                            (
                                                                                j
                                                                                1
                                                                            )
                                                                            ::
                                                                              (
                                                                                new_rule
                                                                                irreds
                                                                              )
                                                                            []
                                                                                                                                                        (
                                                                              k
                                                                              l
                                                                            )
                                                                            @
                                                                            (
                                                                                eqs
                                                                                @
                                                                                (
                                                                                    eqs'
                                                                                    failures
                                                                                )
                                                                            )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                )
                                              in
                                                ifthenelse
                                                (
                                                  if
                                                  (
                                                    =
                                                    (
                                                        m'
                                                        n'
                                                    )
                                                  )
                                                  then
                                                  (
                                                    process
                                                    (
                                                        failures
                                                        (
                                                          k
                                                          l
                                                        )
                                                        eqs
                                                    )
                                                  )
                                                  else
                                                  (
                                                      ifthenelse
                                                      (
                                                        if
                                                        (
                                                          greater
                                                          (
                                                              (
                                                                m'
                                                                n'
                                                              )
                                                          )
                                                        )
                                                        then
                                                        (
                                                          enter_rule
                                                          (
                                                              (
                                                                m'
                                                                n'
                                                              )
                                                          )
                                                        )
                                                        else
                                                        (
                                                            ifthenelse
                                                            (
                                                              if
                                                              (
                                                                greater
                                                                (
                                                                    (
                                                                      n'
                                                                      m'
                                                                    )
                                                                )
                                                              )
                                                              then
                                                              (
                                                                enter_rule
                                                                (
                                                                    (
                                                                      n'
                                                                      m'
                                                                    )
                                                                )
                                                              )
                                                              else
                                                              (
                                                                  process
                                                                  (
                                                                      ::
                                                                        (
                                                                          (
                                                                            m'
                                                                            n'
                                                                          )
                                                                          failures
                                                                        )
                                                                      (
                                                                        k
                                                                        l
                                                                      )
                                                                      eqs
                                                                  )
                                                              )
                                                            )
                                                        )
                                                      )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            next_criticals
                              (
                                case
                                (
                                  failures
                                  (
                                    case
                                    (
                                      (
                                        k
                                        l
                                      )
                                      try
                                      let
                                      (
                                        (
                                          rl
                                            get_rule
                                            (
                                                l
                                                rules
                                            )
                                        )
                                      in
                                        let
                                        (
                                          (
                                            el
                                              (
                                                field
                                                (
                                                rl
                                                lhs
                                                )
                                                field
                                                (
                                                rl
                                                rhs
                                                )
                                              )
                                          )
                                        in
                                          ifthenelse
                                          (
                                            if
                                            (
                                              =
                                              (
                                                  k
                                                  l
                                              )
                                            )
                                            then
                                            (
                                              process
                                              (
                                                  failures
                                                  (
                                                    k
                                                    l
                                                  )
                                                  strict_critical_pairs
                                                  (
                                                      el
                                                      rename
                                                      (
                                                          field
                                                          (
                                                          rl
                                                          numvars
                                                          )
                                                          el
                                                      )
                                                  )
                                              )
                                            )
                                            else
                                            (
                                                try
                                                let
                                                (
                                                  (
                                                    rk
                                                      get_rule
                                                      (
                                                          k
                                                          rules
                                                      )
                                                  )
                                                in
                                                  let
                                                  (
                                                    (
                                                      ek
                                                        (
                                                          field
                                                          (
                                                          rk
                                                          lhs
                                                          )
                                                          field
                                                          (
                                                          rk
                                                          rhs
                                                          )
                                                        )
                                                    )
                                                  in
                                                    process
                                                    (
                                                        failures
                                                        (
                                                          k
                                                          l
                                                        )
                                                        mutual_critical_pairs
                                                        (
                                                            el
                                                            rename
                                                            (
                                                                field
                                                                (
                                                                rl
                                                                numvars
                                                                )
                                                                ek
                                                            )
                                                        )
                                                    )
                                                  )
                                                )
                                                (
                                                  case
                                                  (
                                                    Not_found
                                                                                                        next_criticals
                                                    (
                                                        failures
                                                        (
                                                          +
                                                          (
                                                              k
                                                              1
                                                          )
                                                          l
                                                        )
                                                    )
                                                  )
                                                )
                                            )
                                          )
                                        )
                                      )
                                      (
                                        case
                                        (
                                          Not_found
                                                                                    next_criticals
                                          (
                                              failures
                                              (
                                                1
                                                +
                                                (
                                                    l
                                                    1
                                                )
                                              )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                          )
                        in
                          process
                        )
                      )
                    )
                  )
                )
            )
          in
            kbrec
          )
        )
      )
  )
  let
  (
    kb_complete
      (
        case
        (
          greater
          (
            case
            (
              complete_rules
              (
                case
                (
                  rules
                  let
                  (
                    (
                      n
                        check_rules
                        (
                            complete_rules
                        )
                      eqs
                        List.map
                        (
                            (
                              case
                              (
                                rule
                                (
                                  field
                                  (
                                  rule
                                  lhs
                                  )
                                  field
                                  (
                                  rule
                                  rhs
                                  )
                                )
                              )
                            )
                            rules
                        )
                    )
                  in
                    let
                    (
                      (
                        completed_rules
                          kb_completion
                          (
                              greater
                              n
                              complete_rules
                              []
                                                            (
                                n
                                n
                              )
                              eqs
                          )
                      )
                    in
                      sequence
                      (
                        print_string
                        (
                            "Canonical set found :"
                        )
                      ;
                        sequence
                        (
                          print_newline
                          (
                              ()
                                                        )
                        ;
                          pretty_rules
                          (
                              List.rev
                              (
                                  completed_rules
                              )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
  )
)
