
(
    								 
  open Terms
                                     
  type
  (  						
      							    	 
     ordering
       type
       params=
       (
       
       )
       cstrs =
       (
       )
       kind =
       
       
       (
       								  
       Greater
       (
       									
       )
       								    
       								  
       Equal
       (
       									
       )
       								    
       								  
       NotGE
       (
       									
       )
       								    
       								  
       )
       								  
       														  
       														 
    											   
  								        
  )
                                     
  let
  (
   
    ge_ord
   (
    case
        (
     		
     		 order
     		(
     		 case
     		     (
     		 	  pair
     		      match
     		      order
     		      (
     		          pair
     		      )
     		      (
     		      
     		      case
     		      (
     		        NotGE
     		        
     		        false
     		      ) 
     		      	        											 
     		        
     		        case
     		        (
     		         _
     		         
     		         true
     		        )
     		        													    
     		      	        											 
     		      	        											 
     		      )
     		      			   
     		     )
     		)
     		    		   
        )
   )
       		     
   gt_ord
  (
   case
       (
    		
    		 order
    		(
    		 case
    		     (
    		 	  pair
    		      match
    		      order
    		      (
    		          pair
    		      )
    		      (
    		      
    		      case
    		      (
    		        Greater
    		        
    		        true
    		      ) 
    		      	        											 
    		        
    		        case
    		        (
    		         _
    		         
    		         false
    		        )
    		        													    
    		      	        											 
    		      	        											 
    		      )
    		      			   
    		     )
    		)
    		    		   
       )
  )
      		     
   eq_ord
  (
   case
       (
    		
    		 order
    		(
    		 case
    		     (
    		 	  pair
    		      match
    		      order
    		      (
    		          pair
    		      )
    		      (
    		      
    		      case
    		      (
    		        Equal
    		        
    		        true
    		      ) 
    		      	        											 
    		        
    		        case
    		        (
    		         _
    		         
    		         false
    		        )
    		        													    
    		      	        											 
    		      	        											 
    		      )
    		      			   
    		     )
    		)
    		    		   
       )
  )
      		    
  )
                                     
  let
  (
   
    rem_eq
   (
    case
        (
     		
     		 equiv
     		(
     		 case
     		     (
     		 	  x
     		      (
     		       
     		       case
     		       (
     		         []
     		         
     		         failwith
     		         (
     		             "rem_eq"
     		         )
     		       ) 
     		       	        											 
     		         
     		         case
     		         (
     		          
     		          ::
     		          (
     		              y
     		              l
     		          )
     		          
     		          ifthenelse
     		          (
     		           if
     		           (
     		            equiv
     		            (
     		                
     		                    					 (
     		                      					   x
     		                    					   
     		                	y
     		                    					   
     		                    					 )
     		            )
     		           )
     		           then
     		           (
     		            l
     		           )
     		           else
     		           (
     		            ::
     		            (
     		                y
     		                rem_eq
     		                (
     		                    equiv
     		                    x
     		                    l
     		                )
     		            )
     		           ) 
     		          )
     		          	    											 
     		         )
     		         													    
     		       	        											 
     		       	        											 
     		      )
     		         							   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    diff_eq
   (
    case
        (
     		
     		 equiv
     		(
     		 case
     		     (
     		 	  
     		 	  (
     		 	   x
     		 	       						 
     		 	  	y
     		 	  
     		 	  )
     		      
     		      let
     		      (
     		       (
     		          									  
     		        
     		         diffrec
     		         (
     		          
     		          case
     		          (
     		            alias p
     		            (
     		              
     		              (
     		               []
     		                   						 
     		              	_
     		              
     		              )
     		            )
     		                									   
     		            
     		            p
     		          ) 
     		          	        											 
     		            
     		            case
     		            (
     		             
     		             (
     		              
     		              ::
     		              (
     		                  h
     		                  t
     		              )
     		                  						 
     		             	y
     		             
     		             )
     		             
     		             
     		             try
     		             diffrec
     		             (
     		                 
     		                     					 (
     		                       					   t
     		                     					   
     		                 	rem_eq
     		                 	(
     		                 	    equiv
     		                 	    h
     		                 	    y
     		                 	)
     		                     					   
     		                     					 )
     		             )
     		             (
     		             
     		             case
     		             (
     		               
     		               Failure
     		               _
     		               									  
     		               
     		               
     		               let
     		               (
     		                (
     		                   									  
     		                 
     		                  
     		                  (
     		                   x'
     		                       						 
     		                  	y'
     		                  
     		                  )
     		                  diffrec
     		                  (
     		                      
     		                          					 (
     		                            					   t
     		                          					   
     		                      	y
     		                          					   
     		                          					 )
     		                  ) 
     		                 							    		   
     		                   									  
     		                )
     		               in
     		                 
     		                     					 (
     		                       					   ::
     		                 (
     		                     h
     		                     x'
     		                 )
     		                     					   
     		                 	y'
     		                     					   
     		                     					 )
     		               )
     		                   									
     		             ) 
     		             	        											 
     		             	        											 
     		             )
     		                 							   
     		            )
     		            													    
     		          	        											 
     		          	        											 
     		         )
     		            							    
     		        							    		   
     		          									  
     		       )
     		      in
     		        ifthenelse
     		        (
     		         if
     		         (
     		          >
     		          (
     		              List.length
     		              (
     		                  x
     		              )
     		              List.length
     		              (
     		                  y
     		              )
     		          )
     		         )
     		         then
     		         (
     		          diffrec
     		          (
     		              
     		                  					 (
     		                    					   y
     		                  					   
     		              	x
     		                  					   
     		                  					 )
     		          )
     		         )
     		         else
     		         (
     		          diffrec
     		          (
     		              
     		                  					 (
     		                    					   x
     		                  					   
     		              	y
     		                  					   
     		                  					 )
     		          )
     		         ) 
     		        )
     		        	    											 
     		      )
     		          									
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    mult_ext
   (
    case
        (
    	  order
         (
          
          case
          (
            
            (
             
             Term
             
             (
              _
                  						 
             	sons1
             
             )
             									  
                 						 
            	
            	Term
            	
            	(
            	 _
            	     						 
            		sons2
            	
            	)
            										  
            
            )
            
            match
            diff_eq
            (
                eq_ord
                (
                    order
                )
                
                    					 (
                      					   sons1
                    					   
                	sons2
                    					   
                    					 )
            )
            (
            
            case
            (
              
              (
               []
                   						 
              	[]
              
              )
              
              Equal
            ) 
            	        											 
              
              case
              (
               
               (
                l1
                    						 
               	l2
               
               )
               
               ifthenelse
               (
                if
                (
                 List.for_all
                 (
                     (
                      
                      case
                      (
                      n
                      
                      List.exists
                      (
                          (
                           
                           case
                           (
                           m
                           
                           gt_ord
                           (
                               order
                               
                                   					 (
                                     					   m
                                   					   
                               	n
                                   					   
                                   					 )
                           )
                           )
                           													 
                          )
                             						  
                          l1
                      )
                      )
                      													 
                     )
                        						  
                     l2
                 )
                )
                then
                (
                 Greater
                )
                else
                (
                 NotGE
                ) 
               )
               	    											 
              )
              													    
            	        											 
            	        											 
            )
            			   
          ) 
          	        											 
            
            case
            (
             _
             
             failwith
             (
                 "mult_ext"
             )
            )
            													    
          	        											 
          	        											 
         )
            							   
        )
   )
       		    
  )
                                     
  let
  (
   
    lex_ext
   (
    case
        (
    	  order
         (
          
          case
          (
            
            (
             alias m
             (
               
               Term
               
               (
                _
                    						 
               	sons1
               
               )
               									  
             )
                 									   
                 						 
            	alias n
            	(
            	  
            	  Term
            	  
            	  (
            	   _
            	       						 
            	  	sons2
            	  
            	  )
            	  									  
            	)
            	    									   
            
            )
            
            
            let
            (
             (
                									  
              
               lexrec
               (
                
                case
                (
                  
                  (
                   []
                       						 
                  	[]
                  
                  )
                  
                  Equal
                ) 
                	        											 
                  
                  case
                  (
                   
                   (
                    []
                        						 
                   	_
                   
                   )
                   
                   NotGE
                  )
                  													    
                	        											 
                  
                  case
                  (
                   
                   (
                    _
                        						 
                   	[]
                   
                   )
                   
                   Greater
                  )
                  													    
                	        											 
                  
                  case
                  (
                   
                   (
                    
                    ::
                    (
                        x1
                        l1
                    )
                        						 
                   	
                   	::
                   	(
                   	    x2
                   	    l2
                   	)
                   
                   )
                   
                   match
                   order
                   (
                       
                           					 (
                             					   x1
                           					   
                       	x2
                           					   
                           					 )
                   )
                   (
                   
                   case
                   (
                     Greater
                     
                     ifthenelse
                     (
                      if
                      (
                       List.for_all
                       (
                           (
                            
                            case
                            (
                            n'
                            
                            gt_ord
                            (
                                order
                                
                                    					 (
                                      					   m
                                    					   
                                	n'
                                    					   
                                    					 )
                            )
                            )
                            													 
                           )
                              						  
                           l2
                       )
                      )
                      then
                      (
                       Greater
                      )
                      else
                      (
                       NotGE
                      ) 
                     )
                     	    											 
                   ) 
                   	        											 
                     
                     case
                     (
                      Equal
                      
                      lexrec
                      (
                          
                              					 (
                                					   l1
                              					   
                          	l2
                              					   
                              					 )
                      )
                     )
                     													    
                   	        											 
                     
                     case
                     (
                      NotGE
                      
                      ifthenelse
                      (
                       if
                       (
                        List.exists
                        (
                            (
                             
                             case
                             (
                             m'
                             
                             ge_ord
                             (
                                 order
                                 
                                     					 (
                                       					   m'
                                     					   
                                 	n
                                     					   
                                     					 )
                             )
                             )
                             													 
                            )
                               						  
                            l1
                        )
                       )
                       then
                       (
                        Greater
                       )
                       else
                       (
                        NotGE
                       ) 
                      )
                      	    											 
                     )
                     													    
                   	        											 
                   	        											 
                   )
                   			   
                  )
                  													    
                	        											 
                	        											 
               )
                  							    
              							    		   
                									  
             )
            in
              lexrec
              (
                  
                      					 (
                        					   sons1
                      					   
                  	sons2
                      					   
                      					 )
              )
            )
                									
          ) 
          	        											 
            
            case
            (
             _
             
             failwith
             (
                 "lex_ext"
             )
            )
            													    
          	        											 
          	        											 
         )
            							   
        )
   )
       		    
  )
                                     
  let
  (
   
    rpo
   (
    case
        (
     		
     		 op_order
     		(
     		 case
     		     (
     		 	  ext
     		      
     		      let
     		      (
     		       (
     		          									  
     		        
     		         rporec
     		        (
     		         case
     		             (
     		         	  
     		         	  (
     		         	   m
     		         	       						 
     		         	  	n
     		         	  
     		         	  )
     		              ifthenelse
     		              (
     		               if
     		               (
     		                =
     		                (
     		                    m
     		                    n
     		                )
     		               )
     		               then
     		               (
     		                Equal
     		               )
     		               else
     		               (
     		                match
     		                m
     		                (
     		                
     		                case
     		                (
     		                  
     		                  Var
     		                  vm
     		                  									  
     		                  
     		                  NotGE
     		                ) 
     		                	        											 
     		                  
     		                  case
     		                  (
     		                   
     		                   Term
     		                   
     		                   (
     		                    op1
     		                        						 
     		                   	sons1
     		                   
     		                   )
     		                   									  
     		                   
     		                   match
     		                   n
     		                   (
     		                   
     		                   case
     		                   (
     		                     
     		                     Var
     		                     vn
     		                     									  
     		                     
     		                     ifthenelse
     		                     (
     		                      if
     		                      (
     		                       occurs
     		                       (
     		                           vn
     		                           m
     		                       )
     		                      )
     		                      then
     		                      (
     		                       Greater
     		                      )
     		                      else
     		                      (
     		                       NotGE
     		                      ) 
     		                     )
     		                     	    											 
     		                   ) 
     		                   	        											 
     		                     
     		                     case
     		                     (
     		                      
     		                      Term
     		                      
     		                      (
     		                       op2
     		                           						 
     		                      	sons2
     		                      
     		                      )
     		                      									  
     		                      
     		                      match
     		                      op_order
     		                      (
     		                          op1
     		                          op2
     		                      )
     		                      (
     		                      
     		                      case
     		                      (
     		                        Greater
     		                        
     		                        ifthenelse
     		                        (
     		                         if
     		                         (
     		                          List.for_all
     		                          (
     		                              (
     		                               
     		                               case
     		                               (
     		                               n'
     		                               
     		                               gt_ord
     		                               (
     		                                   rporec
     		                                   
     		                                       					 (
     		                                         					   m
     		                                       					   
     		                                   	n'
     		                                       					   
     		                                       					 )
     		                               )
     		                               )
     		                               													 
     		                              )
     		                                 						  
     		                              sons2
     		                          )
     		                         )
     		                         then
     		                         (
     		                          Greater
     		                         )
     		                         else
     		                         (
     		                          NotGE
     		                         ) 
     		                        )
     		                        	    											 
     		                      ) 
     		                      	        											 
     		                        
     		                        case
     		                        (
     		                         Equal
     		                         
     		                         ext
     		                         (
     		                             rporec
     		                             
     		                                 					 (
     		                                   					   m
     		                                 					   
     		                             	n
     		                                 					   
     		                                 					 )
     		                         )
     		                        )
     		                        													    
     		                      	        											 
     		                        
     		                        case
     		                        (
     		                         NotGE
     		                         
     		                         ifthenelse
     		                         (
     		                          if
     		                          (
     		                           List.exists
     		                           (
     		                               (
     		                                
     		                                case
     		                                (
     		                                m'
     		                                
     		                                ge_ord
     		                                (
     		                                    rporec
     		                                    
     		                                        					 (
     		                                          					   m'
     		                                        					   
     		                                    	n
     		                                        					   
     		                                        					 )
     		                                )
     		                                )
     		                                													 
     		                               )
     		                                  						  
     		                               sons1
     		                           )
     		                          )
     		                          then
     		                          (
     		                           Greater
     		                          )
     		                          else
     		                          (
     		                           NotGE
     		                          ) 
     		                         )
     		                         	    											 
     		                        )
     		                        													    
     		                      	        											 
     		                      	        											 
     		                      )
     		                      			   
     		                     )
     		                     													    
     		                   	        											 
     		                   	        											 
     		                   )
     		                   			   
     		                  )
     		                  													    
     		                	        											 
     		                	        											 
     		                )
     		                			   
     		               ) 
     		              )
     		              	    											 
     		             )
     		        )
     		            		   
     		          									  
     		       )
     		      in
     		        rporec
     		      )
     		          									
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
)