
(
    								 
  module  A
   struct
   (
   							  
   type
   (  						
       							    	 
      t
      type
      params=
      (
      
      )
      cstrs =
      (
      )
      kind =
      
      int
      (
      )
      								  
      
      														  
      														 
     											   
   								        
   )
   							  
   let
   (
    
     x
     
     (
     1
     :
     
     t
     (
     )
     								  
     )
         								 
    							    		    
   )
   							  
   let
   (
    
     y
     
     (
     2
     :
     
     t
     (
     )
     								  
     )
         								 
    							    		    
   )
   							  
   let
   (
    
     f
    (
     case
         (
     	  
     	  z
     	  
     	  t
     	  (
     	  )
     	  								  
     	      										   
          
          (
          +
          (
              x
              z
          )
          :
          
          t
          (
          )
          								  
          )
              								
         )
    )
        		    
   )
   							  
   )
   							  
  										    
                                     
  module  B
   struct
   (
   							  
   include
   (
     A
   )
   							  
   type
   (  						
       							    	 
      u
      type
      params=
      (
      
      )
      cstrs =
      (
      )
      kind =
      tuple
      (
       
       t
       (
       )
       								  
         									
        
        t
        (
        )
        								  
      									
      )
         								    
      
      														  
      														 
     											   
   								        
   )
   							  
   let
   (
    
     p
     
     (
     
     (
         					 x
         					 
     	y
         					 
     )
         					 
     :
     
     u
     (
     )
     								  
     )
         								 
    							    		    
   )
   							  
   let
   (
    
     g
    (
     case
         (
     	  
     	  
     	  (
     	   x
     	       						 
     	  	y
     	  
     	  )
     	  
     	  u
     	  (
     	  )
     	  								  
     	      										   
          
          (
          
          (
              					 f
                					 (
                					     x
                					 )
              					 
          	f
          	(
          	    y
          	)
              					 
          )
              					 
          :
          
          u
          (
          )
          								  
          )
              								
         )
    )
        		    
   )
   							  
   )
   							  
  										    
                                     
  
   
   
   let
   (
    (
       									  
     
      print_pair
     (
      case
          (
      	  
      	  (
      	   x
      	       						 
      	  	y
      	  
      	  )
           
           sequence
           (
             print_int
             (
                 x
             )
           ;
             
             sequence
             (
               print_string
               (
                   ", "
               )
             ;
               
               sequence
               (
                 print_int
                 (
                     y
                 )
               ;
                 print_newline
                 (
                     ()
                 )
               )
                   							
             )
                 							
           )
               							
          )
     )
         		   
       									  
    )
   in
     
     sequence
     (
       print_pair
       (
           B.p
       )
     ;
       
       sequence
       (
         print_pair
         (
             B.g
             (
                 B.p
             )
         )
       ;
         print_pair
         (
             B.g
             (
                 
                 (
                     					 123
                     					 
                 	456
                     					 
                 )
                     					 
             )
         )
       )
           							
     )
         							
   )
       									 
  							    		    
                                     
  module  H
   struct
   (
   							  
   include
   (
     A
   )
   							  
   let
   (
    
     f
    (
     case
         (
     	  
     	  z
     	  
     	  t
     	  (
     	  )
     	  								  
     	      										   
          
          (
          -
          (
              x
              1
          )
          :
          
          t
          (
          )
          								  
          )
              								
         )
    )
        		    
   )
   							  
   )
   							  
  										    
                                     
  
   
   
   sequence
   (
     print_int
     (
         H.f
         (
             H.x
         )
     )
   ;
     print_newline
     (
         ()
     )
   )
       							 
  							    		    
                                     
  module  C
   struct
   (
   							  
   include
   (
     
     A
     signature
     (
     		    				
      type
      (  						
          							    	 
         t
         type
         params=
         (
         
         )
         cstrs =
         (
         )
         kind =
         
         
         														  
         														 
        											   
      								        
      )
     		    				
      sig_value f
      value_description
      arrow
      
      t
      (
      )
      								  
      
      int
      (
      )
      								  
         								   
      (
      )
          								
     		    				
      sig_value x
      value_description
      
      t
      (
      )
      								  
      (
      )
          								
     		    				
     )
         									 
   )
   							  
   let
   (
    
     z
     f
     (
         x
     ) 
    							    		    
   )
   							  
   )
   							  
  										    
                                     
  
   
   
   sequence
   (
     print_int
     (
         C.z
     )
   ;
     
     sequence
     (
       print_newline
       (
           ()
       )
     ;
       
       sequence
       (
         print_int
         (
             C.f
             (
                 C.x
             )
         )
       ;
         print_newline
         (
             ()
         )
       )
           							
     )
         							
   )
       							 
  							    		    
                                     
  include
  (
    A
  )
                                     
  
   
   
   sequence
   (
     print_int
     (
         x
     )
   ;
     
     sequence
     (
       print_newline
       (
           ()
       )
     ;
       
       sequence
       (
         print_int
         (
             f
             (
                 y
             )
         )
       ;
         print_newline
         (
             ()
         )
       )
           							
     )
         							
   )
       							 
  							    		    
                                     
  module  F
  functor X
  (
   signature
   (
   		    				
   )
   struct
   (
   							  
   
    
    
    sequence
    (
      print_string
      (
          "F is called"
      )
    ;
      print_newline
      (
          ()
      )
    )
        							 
   							    		    
   							  
   type
   (  						
       							    	 
      t
      type
      params=
      (
      
      )
      cstrs =
      (
      )
      kind =
      
      
      (
      								  
      A
      (
      									
      )
      								    
      								  
      B
      (
      									
       
       int
       (
       )
       								  
      								     
      )
      								    
      								  
      )
      								  
      														  
      														 
     											   
   								        
   )
   							  
   let
   (
    
     print_t
     (
      
      case
      (
        A
        
        print_string
        (
            "A"
        )
      ) 
      	        											 
        
        case
        (
         
         B
         x
         									  
         
         print_int
         (
             x
         )
        )
        													    
      	        											 
      	        											 
     )
        							    
    							    		    
   )
   							  
   )
   							  
  )
      										    
                                     
  module  D
   struct
   (
   							  
   include
   (
     F
     (
     struct
     (
     							  
     )
     							  
     )
     								   
   )
   							  
   let
   (
    
     test
    (
     case
         (
     	  ()
          
          sequence
          (
            print_t
            (
                A
            )
          ;
            
            sequence
            (
              print_newline
              (
                  ()
              )
            ;
              
              sequence
              (
                print_t
                (
                    
                     B
                     42
                        								 
                )
              ;
                print_newline
                (
                    ()
                )
              )
                  							
            )
                							
          )
              							
         )
    )
        		    
   )
   							  
   )
   							  
  										    
                                     
  
   
   
   sequence
   (
     D.test
     (
         ()
     )
   ;
     
     sequence
     (
       D.print_t
       (
           D.A
       )
     ;
       
       sequence
       (
         print_newline
         (
             ()
         )
       ;
         
         sequence
         (
           D.print_t
           (
               
                D.B
                42
                   								 
           )
         ;
           print_newline
           (
               ()
           )
         )
             							
       )
           							
     )
         							
   )
       							 
  							    		    
                                     
  module  E
   struct
   (
   							  
   exception Exn
   (
   
   string
   (
   )
   								  
       										  
   )
       										 
   							  
   class
   (
       								   
     params = 
     (
         	
     )
     class name = c
     class expr = 
                 class_structure
                 (
                     								
                    method1 
                    (
                        <>
                        
                        m
                        
                        
                        1
                    )
                     								
                 )
                     								
         	
       								   
   )
       								   
   							  
   )
   							  
  										    
                                     
  module  G
   struct
   (
   							  
   include
   (
     E
   )
   							  
   
    
    
    sequence
    (
      
      try
      raise
      (
          
           Exn
           "foo"
              								 
      )
      (
      
      case
      (
        
        Exn
        s
        									  
        
        print_string
        (
            s
        )
      ) 
      	        											 
      	        											 
      )
          							   
    ;
      
      sequence
      (
        print_int
        (
            send m
            (
             new c
            )
                						  
        )
      ;
        print_newline
        (
            ()
        )
      )
          							
    )
        							 
   							    		    
   							  
   )
   							  
  										    
                                     
  
   
   
   sequence
   (
     
     try
     raise
     (
         
          G.Exn
          "foo"
             								 
     )
     (
     
     case
     (
       
       G.Exn
       s
       									  
       
       print_string
       (
           s
       )
     ) 
     	        											 
     	        											 
     )
         							   
   ;
     
     sequence
     (
       print_int
       (
           send m
           (
            new G.c
           )
               						  
       )
     ;
       print_newline
       (
           ()
       )
     )
         							
   )
       							 
  							    		    
                                     
)