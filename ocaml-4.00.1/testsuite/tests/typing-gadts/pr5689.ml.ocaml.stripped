(
  type
  (
    inkind
      type
        params =
          (
          )
        cstrs =
          (
          )
        kind =
              (
                Link
                  (
                  )
                Nonlink
                  (
                  )
              )
                )
  type
  (
    inline_t
      type
        params =
          (
            "_"
          )
        cstrs =
          (
          )
        kind =
            (
              Text
                (
                     string
                    (
                    )
                )
                     inline_t
                    (
                        (
                               inkind
                              (
                              )
                        )
                          (
                            "Nonlink"
                          )
                    )
              Bold
                (
                     list
                    (
                         inline_t
                        (
                            a
                        )
                    )
                )
                     inline_t
                    (
                        a
                    )
              Link
                (
                     string
                    (
                    )
                )
                     inline_t
                    (
                        (
                               inkind
                              (
                              )
                        )
                          (
                            "Link"
                          )
                    )
              Mref
                (
                     string
                    (
                    )
                     list
                    (
                         inline_t
                        (
                            (
                              Nonlink
                                (
                                )
                            )
                                                    )
                    )
                )
                     inline_t
                    (
                        (
                               inkind
                              (
                              )
                        )
                          (
                            "Link"
                          )
                    )
            )
            )
  let
  (
    uppercase
      (
        case
        (
          seq
          let
          (
            (
              process
                poly
                 'a
                  arrow
                     inline_t
                    (
                        a
                    )
                     inline_t
                    (
                        a
                    )
                a
                (
                (
                  case
                  (
                    Text
                      txt
                    Text
                      String.uppercase
                      (
                          txt
                      )
                  )
                  case
                  (
                    Bold
                      xs
                    Bold
                      List.map
                      (
                          process
                          xs
                      )
                  )
                  case
                  (
                    Link
                      lnk
                    Link
                      lnk
                  )
                  case
                  (
                    Mref
                      (
                        lnk
                        xs
                      )
                    Mref
                      (
                        lnk
                        List.map
                        (
                            process
                            xs
                        )
                      )
                  )
                )
                :
                    arrow
                       inline_t
                      (
                           a
                          (
                          )
                      )
                       inline_t
                      (
                           a
                          (
                          )
                      )
                                )
            )
          in
            List.map
            (
                process
                seq
            )
          )
        )
      )
  )
  type
  (
    ast_t
      type
        params =
          (
          )
        cstrs =
          (
          )
        kind =
            (
              Ast_Text
                (
                     string
                    (
                    )
                )
                              Ast_Bold
                (
                     list
                    (
                         ast_t
                        (
                        )
                    )
                )
                              Ast_Link
                (
                     string
                    (
                    )
                )
                              Ast_Mref
                (
                     string
                    (
                    )
                     list
                    (
                         ast_t
                        (
                        )
                    )
                )
                            )
            )
  let
  (
    inlineseq_from_astseq
      (
        case
        (
          seq
          let
          (
            (
              process_nonlink
                (
                  case
                  (
                    Ast_Text
                      txt
                    Text
                      txt
                  )
                  case
                  (
                    Ast_Bold
                      xs
                    Bold
                      List.map
                      (
                          process_nonlink
                          xs
                      )
                  )
                  case
                  (
                    _
                    assert false
                  )
                )
            )
          in
            let
            (
              (
                process_any
                  (
                    case
                    (
                      Ast_Text
                        txt
                      Text
                        txt
                    )
                    case
                    (
                      Ast_Bold
                        xs
                      Bold
                        List.map
                        (
                            process_any
                            xs
                        )
                    )
                    case
                    (
                      Ast_Link
                        lnk
                      Link
                        lnk
                    )
                    case
                    (
                      Ast_Mref
                        (
                          lnk
                          xs
                        )
                      Mref
                        (
                          lnk
                          List.map
                          (
                              process_nonlink
                              xs
                          )
                        )
                    )
                  )
              )
            in
              List.map
              (
                  process_any
                  seq
              )
            )
          )
        )
      )
  )
  type
  (
    linkp
      type
        params =
          (
            "_"
          )
        cstrs =
          (
          )
        kind =
            (
              Nonlink
                (
                )
                     linkp
                    (
                        (
                          Nonlink
                            (
                            )
                        )
                                            )
              Maylink
                (
                )
                     linkp
                    (
                         inkind
                        (
                        )
                    )
            )
            )
  let
  (
    inlineseq_from_astseq
      (
        case
        (
          seq
          let
          (
            (
              process
                poly
                 'a
                  arrow
                     linkp
                    (
                        a
                    )
                    arrow
                       ast_t
                      (
                      )
                       inline_t
                      (
                          a
                      )
                a
                (
                (
                  case
                  (
                    allow_link
                    (
                      case
                      (
                        ast
                        match
                        (
                          allow_link
                          ast
                        )
                        (
                          case
                          (
                            (
                              Maylink
                                                            Ast_Text
                                txt
                            )
                            Text
                              txt
                          )
                          case
                          (
                            (
                              Nonlink
                                                            Ast_Text
                                txt
                            )
                            Text
                              txt
                          )
                          case
                          (
                            (
                              x
                              Ast_Bold
                                xs
                            )
                            Bold
                              List.map
                              (
                                  process
                                  (
                                      x
                                  )
                                  xs
                              )
                          )
                          case
                          (
                            (
                              Maylink
                                                            Ast_Link
                                lnk
                            )
                            Link
                              lnk
                          )
                          case
                          (
                            (
                              Nonlink
                                                            Ast_Link
                                _
                            )
                            assert false
                          )
                          case
                          (
                            (
                              Maylink
                                                            Ast_Mref
                                (
                                  lnk
                                  xs
                                )
                            )
                            Mref
                              (
                                lnk
                                List.map
                                (
                                    process
                                    (
                                        Nonlink
                                                                            )
                                    xs
                                )
                              )
                          )
                          case
                          (
                            (
                              Nonlink
                                                            Ast_Mref
                                _
                            )
                            assert false
                          )
                        )
                      )
                    )
                  )
                )
                :
                    arrow
                       linkp
                      (
                           a
                          (
                          )
                      )
                      arrow
                         ast_t
                        (
                        )
                         inline_t
                        (
                             a
                            (
                            )
                        )
                                )
            )
          in
            List.map
            (
                process
                (
                    Maylink
                                    )
                seq
            )
          )
        )
      )
  )
  type
  (
    linkp2
      type
        params =
          (
            "_"
          )
        cstrs =
          (
          )
        kind =
            (
              Kind
                (
                     linkp
                    (
                        a
                    )
                )
                     linkp2
                    (
                        a
                          (
                                 inkind
                                (
                                )
                          )
                            (
                            )
                    )
            )
            )
  let
  (
    inlineseq_from_astseq
      (
        case
        (
          seq
          let
          (
            (
              process
                poly
                 'a
                  arrow
                     linkp2
                    (
                        a
                    )
                    arrow
                       ast_t
                      (
                      )
                       inline_t
                      (
                          a
                      )
                a
                (
                (
                  case
                  (
                    allow_link
                    (
                      case
                      (
                        ast
                        match
                        (
                          allow_link
                          ast
                        )
                        (
                          case
                          (
                            (
                              Kind
                                _
                              Ast_Text
                                txt
                            )
                            Text
                              txt
                          )
                          case
                          (
                            (
                              x
                              Ast_Bold
                                xs
                            )
                            Bold
                              List.map
                              (
                                  process
                                  (
                                      x
                                  )
                                  xs
                              )
                          )
                          case
                          (
                            (
                              Kind
                                Maylink
                                                              Ast_Link
                                lnk
                            )
                            Link
                              lnk
                          )
                          case
                          (
                            (
                              Kind
                                Nonlink
                                                              Ast_Link
                                _
                            )
                            assert false
                          )
                          case
                          (
                            (
                              Kind
                                Maylink
                                                              Ast_Mref
                                (
                                  lnk
                                  xs
                                )
                            )
                            Mref
                              (
                                lnk
                                List.map
                                (
                                    process
                                    (
                                        Kind
                                          Nonlink
                                                                              )
                                    xs
                                )
                              )
                          )
                          case
                          (
                            (
                              Kind
                                Nonlink
                                                              Ast_Mref
                                _
                            )
                            assert false
                          )
                        )
                      )
                    )
                  )
                )
                :
                    arrow
                       linkp2
                      (
                           a
                          (
                          )
                      )
                      arrow
                         ast_t
                        (
                        )
                         inline_t
                        (
                             a
                            (
                            )
                        )
                                )
            )
          in
            List.map
            (
                process
                (
                    Kind
                      Maylink
                                      )
                seq
            )
          )
        )
      )
  )
)
