
(
    								 
  let
  (
   
    is_empty
   (
    case
        (
    	  s
         
         try
         
         sequence
         (
           Stream.empty
           (
               s
           )
         ;
           true
         )
             							
         (
         
         case
         (
           Stream.Failure
           
           false
         ) 
         	        											 
         	        											 
         )
             							   
        )
   )
       		    
  )
                                     
  let
  (
   
    test_icons
    
    let
    (
     (
        									  
      
       s
       Stream.of_string
       (
           "ab"
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         s
         Stream.icons
         (
             63
             s
         ) 
        							    		   
          									  
       )
      in
        
        sequence
        (
          Testing.test
          (
              =
              (
                  Stream.next
                  (
                      s
                  )
                  63
              )
          )
        ;
          
          sequence
          (
            Testing.test
            (
                =
                (
                    Stream.next
                    (
                        s
                    )
                    61
                )
            )
          ;
            
            sequence
            (
              Testing.test
              (
                  =
                  (
                      Stream.next
                      (
                          s
                      )
                      62
                  )
              )
            ;
              
              sequence
              (
                Testing.test
                (
                    is_empty
                    (
                        s
                    )
                )
              ;
                ()
              )
                  							
            )
                							
          )
              							
        )
            							
      )
          									
    )
        									 
   							    		    
  )
                                     
  let
  (
   
    test_lcons
    
    let
    (
     (
        									  
      
       s
       Stream.of_string
       (
           "ab"
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         s
         Stream.lcons
         (
             (
              
              case
              (
              ()
              
              63
              )
              													 
             )
                						  
             s
         ) 
        							    		   
          									  
       )
      in
        
        sequence
        (
          Testing.test
          (
              =
              (
                  Stream.next
                  (
                      s
                  )
                  63
              )
          )
        ;
          
          sequence
          (
            Testing.test
            (
                =
                (
                    Stream.next
                    (
                        s
                    )
                    61
                )
            )
          ;
            
            sequence
            (
              Testing.test
              (
                  =
                  (
                      Stream.next
                      (
                          s
                      )
                      62
                  )
              )
            ;
              
              sequence
              (
                Testing.test
                (
                    is_empty
                    (
                        s
                    )
                )
              ;
                ()
              )
                  							
            )
                							
          )
              							
        )
            							
      )
          									
    )
        									 
   							    		    
  )
                                     
  let
  (
   
    test_iapp
    
    let
    (
     (
        									  
      
       s
       Stream.of_string
       (
           "ab"
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         s
         Stream.iapp
         (
             Stream.of_list
             (
                 ::
                  (
                  63
                  []
                  ) 
                     						  
             )
             s
         ) 
        							    		   
          									  
       )
      in
        
        sequence
        (
          Testing.test
          (
              =
              (
                  Stream.next
                  (
                      s
                  )
                  63
              )
          )
        ;
          
          sequence
          (
            Testing.test
            (
                =
                (
                    Stream.next
                    (
                        s
                    )
                    61
                )
            )
          ;
            
            sequence
            (
              Testing.test
              (
                  =
                  (
                      Stream.next
                      (
                          s
                      )
                      62
                  )
              )
            ;
              
              sequence
              (
                Testing.test
                (
                    is_empty
                    (
                        s
                    )
                )
              ;
                ()
              )
                  							
            )
                							
          )
              							
        )
            							
      )
          									
    )
        									 
   							    		    
  )
                                     
  let
  (
   
    test_lapp_right
    
    let
    (
     (
        									  
      
       s1
       Stream.of_list
       (
           ::
            (
            63
            []
            ) 
               						  
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         s2
         Stream.of_string
         (
             "ab"
         ) 
        							    		   
          									  
       )
      in
        
        let
        (
         (
            									  
          
           s
           Stream.lapp
           (
               (
                
                case
                (
                ()
                
                s1
                )
                													 
               )
                  						  
               s2
           ) 
          							    		   
            									  
         )
        in
          
          sequence
          (
            Testing.test
            (
                =
                (
                    Stream.next
                    (
                        s
                    )
                    63
                )
            )
          ;
            
            sequence
            (
              Testing.test
              (
                  =
                  (
                      Stream.next
                      (
                          s
                      )
                      61
                  )
              )
            ;
              
              sequence
              (
                Testing.test
                (
                    =
                    (
                        Stream.next
                        (
                            s
                        )
                        62
                    )
                )
              ;
                
                sequence
                (
                  Testing.test
                  (
                      is_empty
                      (
                          s
                      )
                  )
                ;
                  ()
                )
                    							
              )
                  							
            )
                							
          )
              							
        )
            									
      )
          									
    )
        									 
   							    		    
  )
                                     
  let
  (
   
    test_lapp_left
    
    let
    (
     (
        									  
      
       s1
       Stream.of_string
       (
           "bc"
       ) 
      							    		   
        									  
     )
    in
      
      let
      (
       (
          									  
        
         s2
         Stream.of_list
         (
             ::
              (
              61
              []
              ) 
                 						  
         ) 
        							    		   
          									  
       )
      in
        
        sequence
        (
          Testing.test
          (
              =
              (
                  Stream.next
                  (
                      s1
                  )
                  62
              )
          )
        ;
          
          let
          (
           (
              									  
            
             s
             Stream.lapp
             (
                 (
                  
                  case
                  (
                  ()
                  
                  s1
                  )
                  													 
                 )
                    						  
                 s2
             ) 
            							    		   
              									  
           )
          in
            
            sequence
            (
              Testing.test
              (
                  =
                  (
                      Stream.next
                      (
                          s
                      )
                      63
                  )
              )
            ;
              
              sequence
              (
                Testing.test
                (
                    =
                    (
                        Stream.next
                        (
                            s
                        )
                        61
                    )
                )
              ;
                
                sequence
                (
                  Testing.test
                  (
                      is_empty
                      (
                          s
                      )
                  )
                ;
                  ()
                )
                    							
              )
                  							
            )
                							
          )
              									
        )
            							
      )
          									
    )
        									 
   							    		    
  )
                                     
  let
  (
   
    test_slazy
    
    let
    (
     (
        									  
      
       s
       Stream.of_string
       (
           "ab"
       ) 
      							    		   
        									  
     )
    in
      
      sequence
      (
        Testing.test
        (
            =
            (
                Stream.next
                (
                    s
                )
                61
            )
        )
      ;
        
        let
        (
         (
            									  
          
           s
           Stream.slazy
           (
               (
                
                case
                (
                ()
                
                s
                )
                													 
               )
                  						  
           ) 
          							    		   
            									  
         )
        in
          
          sequence
          (
            Testing.test
            (
                =
                (
                    Stream.next
                    (
                        s
                    )
                    62
                )
            )
          ;
            
            sequence
            (
              Testing.test
              (
                  is_empty
                  (
                      s
                  )
              )
            ;
              ()
            )
                							
          )
              							
        )
            									
      )
          							
    )
        									 
   							    		    
  )
                                     
)