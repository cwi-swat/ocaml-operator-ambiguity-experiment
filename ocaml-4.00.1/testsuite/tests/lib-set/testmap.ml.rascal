
(
    								 
  module  M
   
       								  
    Map.Make
       							     
   (
   struct
   (
   							  
   type
   (  						
       							    	 
      t
      type
      params=
      (
      
      )
      cstrs =
      (
      )
      kind =
      
      int
      (
      )
      								  
      
      														  
      														 
     											   
   								        
   )
   							  
   let
   (
    
     compare
     compare 
    							    		    
   )
   							  
   )
   							  
   )
   								   
  										    
                                     
  let
  (
   
    img
   (
    case
        (
     		
     		 x
     		(
     		 case
     		     (
     		 	  m
     		      
     		      try
     		      
     		       Some
     		       M.find
     		       (
     		           x
     		           m
     		       )
     		          								 
     		      (
     		      
     		      case
     		      (
     		        Not_found
     		        
     		        None
     		      ) 
     		      	        											 
     		      	        											 
     		      )
     		          							   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    testvals
    ::
     (
     0
     ::
     (
     1
     ::
     (
     2
     ::
     (
     3
     ::
     (
     4
     ::
     (
     5
     ::
     (
     6
     ::
     (
     7
     ::
     (
     8
     ::
     (
     9
     []
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						  
     ) 
        						   
   							    		    
  )
                                     
  let
  (
   
    check
   (
    case
        (
     		
     		 msg
     		(
     		 case
     		     (
     		 	  cond
     		      ifthenelse
     		      (
     		       if
     		       (
     		        not
     		        (
     		            List.for_all
     		            (
     		                cond
     		                testvals
     		            )
     		        )
     		       )
     		       then
     		       (
     		        Printf.printf
     		        (
     		            "Test %s FAILED\n%!"
     		            msg
     		        )
     		       )
     		       else
     		       (
     		       )
     		      )
     		          									   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    checkbool
   (
    case
        (
     		
     		 msg
     		(
     		 case
     		     (
     		 	  b
     		      ifthenelse
     		      (
     		       if
     		       (
     		        not
     		        (
     		            b
     		        )
     		       )
     		       then
     		       (
     		        Printf.printf
     		        (
     		            "Test %s FAILED\n%!"
     		            msg
     		        )
     		       )
     		       else
     		       (
     		       )
     		      )
     		          									   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    uncurry
   (
    case
        (
     		
     		 
     		 f
     		 arrow
     		 a
     		 arrow
     		 b
     		 c
     		    								   
     		    								   
     		     										   
     		(
     		 case
     		     (
     		 	  
     		 	  
     		 	  (
     		 	   x
     		 	       						 
     		 	  	y
     		 	  
     		 	  )
     		 	  tuple
     		 	  (
     		 	   a
     		 	     									
     		 	    b
     		 	  									
     		 	  )
     		 	     								    
     		 	      										   
     		      f
     		      (
     		          x
     		          y
     		      )
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    test
   (
    case
        (
     		
     		 x
     		(
     		 case
     		     (
     		  		
     		  		 v
     		  		(
     		  		 case
     		  		     (
     		  		  		
     		  		  		 s1
     		  		  		(
     		  		  		 case
     		  		  		     (
     		  		  		 	  s2
     		  		  		      
     		  		  		      sequence
     		  		  		      (
     		  		  		        checkbool
     		  		  		        (
     		  		  		            "is_empty"
     		  		  		            =
     		  		  		            (
     		  		  		                M.is_empty
     		  		  		                (
     		  		  		                    s1
     		  		  		                )
     		  		  		                List.for_all
     		  		  		                (
     		  		  		                    (
     		  		  		                     
     		  		  		                     case
     		  		  		                     (
     		  		  		                     i
     		  		  		                     
     		  		  		                     =
     		  		  		                     (
     		  		  		                         img
     		  		  		                         (
     		  		  		                             i
     		  		  		                             s1
     		  		  		                         )
     		  		  		                         None
     		  		  		                     )
     		  		  		                     )
     		  		  		                     													 
     		  		  		                    )
     		  		  		                       						  
     		  		  		                    testvals
     		  		  		                )
     		  		  		            )
     		  		  		        )
     		  		  		      ;
     		  		  		        
     		  		  		        sequence
     		  		  		        (
     		  		  		          check
     		  		  		          (
     		  		  		              "mem"
     		  		  		              (
     		  		  		               
     		  		  		               case
     		  		  		               (
     		  		  		               i
     		  		  		               
     		  		  		               =
     		  		  		               (
     		  		  		                   M.mem
     		  		  		                   (
     		  		  		                       i
     		  		  		                       s1
     		  		  		                   )
     		  		  		                   <>
     		  		  		                   (
     		  		  		                       img
     		  		  		                       (
     		  		  		                           i
     		  		  		                           s1
     		  		  		                       )
     		  		  		                       None
     		  		  		                   )
     		  		  		               )
     		  		  		               )
     		  		  		               													 
     		  		  		              )
     		  		  		                 						  
     		  		  		          )
     		  		  		        ;
     		  		  		          
     		  		  		          sequence
     		  		  		          (
     		  		  		            check
     		  		  		            (
     		  		  		                "add"
     		  		  		                
     		  		  		                let
     		  		  		                (
     		  		  		                 (
     		  		  		                    									  
     		  		  		                  
     		  		  		                   s
     		  		  		                   M.add
     		  		  		                   (
     		  		  		                       x
     		  		  		                       v
     		  		  		                       s1
     		  		  		                   ) 
     		  		  		                  							    		   
     		  		  		                    									  
     		  		  		                 )
     		  		  		                in
     		  		  		                  (
     		  		  		                   
     		  		  		                   case
     		  		  		                   (
     		  		  		                   i
     		  		  		                   
     		  		  		                   =
     		  		  		                   (
     		  		  		                       img
     		  		  		                       (
     		  		  		                           i
     		  		  		                           s
     		  		  		                       )
     		  		  		                       ifthenelse
     		  		  		                       (
     		  		  		                        if
     		  		  		                        (
     		  		  		                         =
     		  		  		                         (
     		  		  		                             i
     		  		  		                             x
     		  		  		                         )
     		  		  		                        )
     		  		  		                        then
     		  		  		                        (
     		  		  		                         
     		  		  		                          Some
     		  		  		                          v
     		  		  		                             								 
     		  		  		                        )
     		  		  		                        else
     		  		  		                        (
     		  		  		                         img
     		  		  		                         (
     		  		  		                             i
     		  		  		                             s1
     		  		  		                         )
     		  		  		                        ) 
     		  		  		                       )
     		  		  		                       	    											 
     		  		  		                   )
     		  		  		                   )
     		  		  		                   													 
     		  		  		                  )
     		  		  		                     						  
     		  		  		                )
     		  		  		                    									
     		  		  		            )
     		  		  		          ;
     		  		  		            
     		  		  		            sequence
     		  		  		            (
     		  		  		              check
     		  		  		              (
     		  		  		                  "singleton"
     		  		  		                  
     		  		  		                  let
     		  		  		                  (
     		  		  		                   (
     		  		  		                      									  
     		  		  		                    
     		  		  		                     s
     		  		  		                     M.singleton
     		  		  		                     (
     		  		  		                         x
     		  		  		                         v
     		  		  		                     ) 
     		  		  		                    							    		   
     		  		  		                      									  
     		  		  		                   )
     		  		  		                  in
     		  		  		                    (
     		  		  		                     
     		  		  		                     case
     		  		  		                     (
     		  		  		                     i
     		  		  		                     
     		  		  		                     =
     		  		  		                     (
     		  		  		                         img
     		  		  		                         (
     		  		  		                             i
     		  		  		                             s
     		  		  		                         )
     		  		  		                         ifthenelse
     		  		  		                         (
     		  		  		                          if
     		  		  		                          (
     		  		  		                           =
     		  		  		                           (
     		  		  		                               i
     		  		  		                               x
     		  		  		                           )
     		  		  		                          )
     		  		  		                          then
     		  		  		                          (
     		  		  		                           
     		  		  		                            Some
     		  		  		                            v
     		  		  		                               								 
     		  		  		                          )
     		  		  		                          else
     		  		  		                          (
     		  		  		                           None
     		  		  		                          ) 
     		  		  		                         )
     		  		  		                         	    											 
     		  		  		                     )
     		  		  		                     )
     		  		  		                     													 
     		  		  		                    )
     		  		  		                       						  
     		  		  		                  )
     		  		  		                      									
     		  		  		              )
     		  		  		            ;
     		  		  		              
     		  		  		              sequence
     		  		  		              (
     		  		  		                check
     		  		  		                (
     		  		  		                    "remove"
     		  		  		                    
     		  		  		                    let
     		  		  		                    (
     		  		  		                     (
     		  		  		                        									  
     		  		  		                      
     		  		  		                       s
     		  		  		                       M.remove
     		  		  		                       (
     		  		  		                           x
     		  		  		                           s1
     		  		  		                       ) 
     		  		  		                      							    		   
     		  		  		                        									  
     		  		  		                     )
     		  		  		                    in
     		  		  		                      (
     		  		  		                       
     		  		  		                       case
     		  		  		                       (
     		  		  		                       i
     		  		  		                       
     		  		  		                       =
     		  		  		                       (
     		  		  		                           img
     		  		  		                           (
     		  		  		                               i
     		  		  		                               s
     		  		  		                           )
     		  		  		                           ifthenelse
     		  		  		                           (
     		  		  		                            if
     		  		  		                            (
     		  		  		                             =
     		  		  		                             (
     		  		  		                                 i
     		  		  		                                 x
     		  		  		                             )
     		  		  		                            )
     		  		  		                            then
     		  		  		                            (
     		  		  		                             None
     		  		  		                            )
     		  		  		                            else
     		  		  		                            (
     		  		  		                             img
     		  		  		                             (
     		  		  		                                 i
     		  		  		                                 s1
     		  		  		                             )
     		  		  		                            ) 
     		  		  		                           )
     		  		  		                           	    											 
     		  		  		                       )
     		  		  		                       )
     		  		  		                       													 
     		  		  		                      )
     		  		  		                         						  
     		  		  		                    )
     		  		  		                        									
     		  		  		                )
     		  		  		              ;
     		  		  		                
     		  		  		                sequence
     		  		  		                (
     		  		  		                  check
     		  		  		                  (
     		  		  		                      "merge-union"
     		  		  		                      
     		  		  		                      let
     		  		  		                      (
     		  		  		                       (
     		  		  		                          									  
     		  		  		                        
     		  		  		                         f
     		  		  		                        (
     		  		  		                         case
     		  		  		                             (
     		  		  		                          		
     		  		  		                          		 _
     		  		  		                          		(
     		  		  		                          		 case
     		  		  		                          		     (
     		  		  		                          		  		
     		  		  		                          		  		 o1
     		  		  		                          		  		(
     		  		  		                          		  		 case
     		  		  		                          		  		     (
     		  		  		                          		  		 	  o2
     		  		  		                          		  		      match
     		  		  		                          		  		      
     		  		  		                          		  		      (
     		  		  		                          		  		          					 o1
     		  		  		                          		  		          					 
     		  		  		                          		  		      	o2
     		  		  		                          		  		          					 
     		  		  		                          		  		      )
     		  		  		                          		  		          					 
     		  		  		                          		  		      (
     		  		  		                          		  		      
     		  		  		                          		  		      case
     		  		  		                          		  		      (
     		  		  		                          		  		        
     		  		  		                          		  		        (
     		  		  		                          		  		         
     		  		  		                          		  		         Some
     		  		  		                          		  		         v1
     		  		  		                          		  		         									  
     		  		  		                          		  		             						 
     		  		  		                          		  		        	
     		  		  		                          		  		        	Some
     		  		  		                          		  		        	v2
     		  		  		                          		  		        										  
     		  		  		                          		  		        
     		  		  		                          		  		        )
     		  		  		                          		  		        
     		  		  		                          		  		        
     		  		  		                          		  		         Some
     		  		  		                          		  		         +.
     		  		  		                          		  		         (
     		  		  		                          		  		             v1
     		  		  		                          		  		             v2
     		  		  		                          		  		         )
     		  		  		                          		  		            								 
     		  		  		                          		  		      ) 
     		  		  		                          		  		      	        											 
     		  		  		                          		  		        
     		  		  		                          		  		        case
     		  		  		                          		  		        (
     		  		  		                          		  		         
     		  		  		                          		  		         (
     		  		  		                          		  		          None
     		  		  		                          		  		              						 
     		  		  		                          		  		         	_
     		  		  		                          		  		         
     		  		  		                          		  		         )
     		  		  		                          		  		         
     		  		  		                          		  		         o2
     		  		  		                          		  		        )
     		  		  		                          		  		        													    
     		  		  		                          		  		      	        											 
     		  		  		                          		  		        
     		  		  		                          		  		        case
     		  		  		                          		  		        (
     		  		  		                          		  		         
     		  		  		                          		  		         (
     		  		  		                          		  		          _
     		  		  		                          		  		              						 
     		  		  		                          		  		         	None
     		  		  		                          		  		         
     		  		  		                          		  		         )
     		  		  		                          		  		         
     		  		  		                          		  		         o1
     		  		  		                          		  		        )
     		  		  		                          		  		        													    
     		  		  		                          		  		      	        											 
     		  		  		                          		  		      	        											 
     		  		  		                          		  		      )
     		  		  		                          		  		      			   
     		  		  		                          		  		     )
     		  		  		                          		  		)
     		  		  		                          		  		    		   
     		  		  		                          		     )
     		  		  		                          		)
     		  		  		                          		    		   
     		  		  		                             )
     		  		  		                        )
     		  		  		                            		   
     		  		  		                          									  
     		  		  		                       )
     		  		  		                      in
     		  		  		                        
     		  		  		                        let
     		  		  		                        (
     		  		  		                         (
     		  		  		                            									  
     		  		  		                          
     		  		  		                           s
     		  		  		                           M.merge
     		  		  		                           (
     		  		  		                               f
     		  		  		                               s1
     		  		  		                               s2
     		  		  		                           ) 
     		  		  		                          							    		   
     		  		  		                            									  
     		  		  		                         )
     		  		  		                        in
     		  		  		                          (
     		  		  		                           
     		  		  		                           case
     		  		  		                           (
     		  		  		                           i
     		  		  		                           
     		  		  		                           =
     		  		  		                           (
     		  		  		                               img
     		  		  		                               (
     		  		  		                                   i
     		  		  		                                   s
     		  		  		                               )
     		  		  		                               f
     		  		  		                               (
     		  		  		                                   i
     		  		  		                                   img
     		  		  		                                   (
     		  		  		                                       i
     		  		  		                                       s1
     		  		  		                                   )
     		  		  		                                   img
     		  		  		                                   (
     		  		  		                                       i
     		  		  		                                       s2
     		  		  		                                   )
     		  		  		                               )
     		  		  		                           )
     		  		  		                           )
     		  		  		                           													 
     		  		  		                          )
     		  		  		                             						  
     		  		  		                        )
     		  		  		                            									
     		  		  		                      )
     		  		  		                          									
     		  		  		                  )
     		  		  		                ;
     		  		  		                  
     		  		  		                  sequence
     		  		  		                  (
     		  		  		                    check
     		  		  		                    (
     		  		  		                        "merge-inter"
     		  		  		                        
     		  		  		                        let
     		  		  		                        (
     		  		  		                         (
     		  		  		                            									  
     		  		  		                          
     		  		  		                           f
     		  		  		                          (
     		  		  		                           case
     		  		  		                               (
     		  		  		                            		
     		  		  		                            		 _
     		  		  		                            		(
     		  		  		                            		 case
     		  		  		                            		     (
     		  		  		                            		  		
     		  		  		                            		  		 o1
     		  		  		                            		  		(
     		  		  		                            		  		 case
     		  		  		                            		  		     (
     		  		  		                            		  		 	  o2
     		  		  		                            		  		      match
     		  		  		                            		  		      
     		  		  		                            		  		      (
     		  		  		                            		  		          					 o1
     		  		  		                            		  		          					 
     		  		  		                            		  		      	o2
     		  		  		                            		  		          					 
     		  		  		                            		  		      )
     		  		  		                            		  		          					 
     		  		  		                            		  		      (
     		  		  		                            		  		      
     		  		  		                            		  		      case
     		  		  		                            		  		      (
     		  		  		                            		  		        
     		  		  		                            		  		        (
     		  		  		                            		  		         
     		  		  		                            		  		         Some
     		  		  		                            		  		         v1
     		  		  		                            		  		         									  
     		  		  		                            		  		             						 
     		  		  		                            		  		        	
     		  		  		                            		  		        	Some
     		  		  		                            		  		        	v2
     		  		  		                            		  		        										  
     		  		  		                            		  		        
     		  		  		                            		  		        )
     		  		  		                            		  		        
     		  		  		                            		  		        
     		  		  		                            		  		         Some
     		  		  		                            		  		         -.
     		  		  		                            		  		         (
     		  		  		                            		  		             v1
     		  		  		                            		  		             v2
     		  		  		                            		  		         )
     		  		  		                            		  		            								 
     		  		  		                            		  		      ) 
     		  		  		                            		  		      	        											 
     		  		  		                            		  		        
     		  		  		                            		  		        case
     		  		  		                            		  		        (
     		  		  		                            		  		         
     		  		  		                            		  		         (
     		  		  		                            		  		          _
     		  		  		                            		  		              						 
     		  		  		                            		  		         	_
     		  		  		                            		  		         
     		  		  		                            		  		         )
     		  		  		                            		  		         
     		  		  		                            		  		         None
     		  		  		                            		  		        )
     		  		  		                            		  		        													    
     		  		  		                            		  		      	        											 
     		  		  		                            		  		      	        											 
     		  		  		                            		  		      )
     		  		  		                            		  		      			   
     		  		  		                            		  		     )
     		  		  		                            		  		)
     		  		  		                            		  		    		   
     		  		  		                            		     )
     		  		  		                            		)
     		  		  		                            		    		   
     		  		  		                               )
     		  		  		                          )
     		  		  		                              		   
     		  		  		                            									  
     		  		  		                         )
     		  		  		                        in
     		  		  		                          
     		  		  		                          let
     		  		  		                          (
     		  		  		                           (
     		  		  		                              									  
     		  		  		                            
     		  		  		                             s
     		  		  		                             M.merge
     		  		  		                             (
     		  		  		                                 f
     		  		  		                                 s1
     		  		  		                                 s2
     		  		  		                             ) 
     		  		  		                            							    		   
     		  		  		                              									  
     		  		  		                           )
     		  		  		                          in
     		  		  		                            (
     		  		  		                             
     		  		  		                             case
     		  		  		                             (
     		  		  		                             i
     		  		  		                             
     		  		  		                             =
     		  		  		                             (
     		  		  		                                 img
     		  		  		                                 (
     		  		  		                                     i
     		  		  		                                     s
     		  		  		                                 )
     		  		  		                                 f
     		  		  		                                 (
     		  		  		                                     i
     		  		  		                                     img
     		  		  		                                     (
     		  		  		                                         i
     		  		  		                                         s1
     		  		  		                                     )
     		  		  		                                     img
     		  		  		                                     (
     		  		  		                                         i
     		  		  		                                         s2
     		  		  		                                     )
     		  		  		                                 )
     		  		  		                             )
     		  		  		                             )
     		  		  		                             													 
     		  		  		                            )
     		  		  		                               						  
     		  		  		                          )
     		  		  		                              									
     		  		  		                        )
     		  		  		                            									
     		  		  		                    )
     		  		  		                  ;
     		  		  		                    
     		  		  		                    sequence
     		  		  		                    (
     		  		  		                      checkbool
     		  		  		                      (
     		  		  		                          "bindings"
     		  		  		                          
     		  		  		                          let
     		  		  		                          (
     		  		  		                           (
     		  		  		                              									  
     		  		  		                            
     		  		  		                             extract
     		  		  		                             (
     		  		  		                              
     		  		  		                              case
     		  		  		                              (
     		  		  		                                []
     		  		  		                                
     		  		  		                                []
     		  		  		                              ) 
     		  		  		                              	        											 
     		  		  		                                
     		  		  		                                case
     		  		  		                                (
     		  		  		                                 
     		  		  		                                 ::
     		  		  		                                 (
     		  		  		                                     hd
     		  		  		                                     tl
     		  		  		                                 )
     		  		  		                                 
     		  		  		                                 match
     		  		  		                                 img
     		  		  		                                 (
     		  		  		                                     hd
     		  		  		                                     s1
     		  		  		                                 )
     		  		  		                                 (
     		  		  		                                 
     		  		  		                                 case
     		  		  		                                 (
     		  		  		                                   None
     		  		  		                                   
     		  		  		                                   extract
     		  		  		                                   (
     		  		  		                                       tl
     		  		  		                                   )
     		  		  		                                 ) 
     		  		  		                                 	        											 
     		  		  		                                   
     		  		  		                                   case
     		  		  		                                   (
     		  		  		                                    
     		  		  		                                    Some
     		  		  		                                    v
     		  		  		                                    									  
     		  		  		                                    
     		  		  		                                    ::
     		  		  		                                    (
     		  		  		                                        
     		  		  		                                        (
     		  		  		                                            					 hd
     		  		  		                                            					 
     		  		  		                                        	v
     		  		  		                                            					 
     		  		  		                                        )
     		  		  		                                            					 
     		  		  		                                        extract
     		  		  		                                        (
     		  		  		                                            tl
     		  		  		                                        )
     		  		  		                                    )
     		  		  		                                   )
     		  		  		                                   													    
     		  		  		                                 	        											 
     		  		  		                                 	        											 
     		  		  		                                 )
     		  		  		                                 			   
     		  		  		                                )
     		  		  		                                													    
     		  		  		                              	        											 
     		  		  		                              	        											 
     		  		  		                             )
     		  		  		                                							    
     		  		  		                            							    		   
     		  		  		                              									  
     		  		  		                           )
     		  		  		                          in
     		  		  		                            =
     		  		  		                            (
     		  		  		                                M.bindings
     		  		  		                                (
     		  		  		                                    s1
     		  		  		                                )
     		  		  		                                extract
     		  		  		                                (
     		  		  		                                    testvals
     		  		  		                                )
     		  		  		                            )
     		  		  		                          )
     		  		  		                              									
     		  		  		                      )
     		  		  		                    ;
     		  		  		                      
     		  		  		                      sequence
     		  		  		                      (
     		  		  		                        checkbool
     		  		  		                        (
     		  		  		                            "for_all"
     		  		  		                            
     		  		  		                            let
     		  		  		                            (
     		  		  		                             (
     		  		  		                                									  
     		  		  		                              
     		  		  		                               p
     		  		  		                              (
     		  		  		                               case
     		  		  		                                   (
     		  		  		                                		
     		  		  		                                		 x
     		  		  		                                		(
     		  		  		                                		 case
     		  		  		                                		     (
     		  		  		                                		 	  y
     		  		  		                                		      =
     		  		  		                                		      (
     		  		  		                                		          mod
     		  		  		                                		          (
     		  		  		                                		              x
     		  		  		                                		              2
     		  		  		                                		          )
     		  		  		                                		          0
     		  		  		                                		      )
     		  		  		                                		     )
     		  		  		                                		)
     		  		  		                                		    		   
     		  		  		                                   )
     		  		  		                              )
     		  		  		                                  		   
     		  		  		                                									  
     		  		  		                             )
     		  		  		                            in
     		  		  		                              =
     		  		  		                              (
     		  		  		                                  M.for_all
     		  		  		                                  (
     		  		  		                                      p
     		  		  		                                      s1
     		  		  		                                  )
     		  		  		                                  List.for_all
     		  		  		                                  (
     		  		  		                                      uncurry
     		  		  		                                      (
     		  		  		                                          p
     		  		  		                                      )
     		  		  		                                      M.bindings
     		  		  		                                      (
     		  		  		                                          s1
     		  		  		                                      )
     		  		  		                                  )
     		  		  		                              )
     		  		  		                            )
     		  		  		                                									
     		  		  		                        )
     		  		  		                      ;
     		  		  		                        
     		  		  		                        sequence
     		  		  		                        (
     		  		  		                          checkbool
     		  		  		                          (
     		  		  		                              "exists"
     		  		  		                              
     		  		  		                              let
     		  		  		                              (
     		  		  		                               (
     		  		  		                                  									  
     		  		  		                                
     		  		  		                                 p
     		  		  		                                (
     		  		  		                                 case
     		  		  		                                     (
     		  		  		                                  		
     		  		  		                                  		 x
     		  		  		                                  		(
     		  		  		                                  		 case
     		  		  		                                  		     (
     		  		  		                                  		 	  y
     		  		  		                                  		      =
     		  		  		                                  		      (
     		  		  		                                  		          mod
     		  		  		                                  		          (
     		  		  		                                  		              x
     		  		  		                                  		              3
     		  		  		                                  		          )
     		  		  		                                  		          0
     		  		  		                                  		      )
     		  		  		                                  		     )
     		  		  		                                  		)
     		  		  		                                  		    		   
     		  		  		                                     )
     		  		  		                                )
     		  		  		                                    		   
     		  		  		                                  									  
     		  		  		                               )
     		  		  		                              in
     		  		  		                                =
     		  		  		                                (
     		  		  		                                    M.exists
     		  		  		                                    (
     		  		  		                                        p
     		  		  		                                        s1
     		  		  		                                    )
     		  		  		                                    List.exists
     		  		  		                                    (
     		  		  		                                        uncurry
     		  		  		                                        (
     		  		  		                                            p
     		  		  		                                        )
     		  		  		                                        M.bindings
     		  		  		                                        (
     		  		  		                                            s1
     		  		  		                                        )
     		  		  		                                    )
     		  		  		                                )
     		  		  		                              )
     		  		  		                                  									
     		  		  		                          )
     		  		  		                        ;
     		  		  		                          
     		  		  		                          sequence
     		  		  		                          (
     		  		  		                            checkbool
     		  		  		                            (
     		  		  		                                "filter"
     		  		  		                                
     		  		  		                                let
     		  		  		                                (
     		  		  		                                 (
     		  		  		                                    									  
     		  		  		                                  
     		  		  		                                   p
     		  		  		                                  (
     		  		  		                                   case
     		  		  		                                       (
     		  		  		                                    		
     		  		  		                                    		 x
     		  		  		                                    		(
     		  		  		                                    		 case
     		  		  		                                    		     (
     		  		  		                                    		 	  y
     		  		  		                                    		      &&
     		  		  		                                    		      (
     		  		  		                                    		          >=
     		  		  		                                    		          (
     		  		  		                                    		              x
     		  		  		                                    		              3
     		  		  		                                    		          )
     		  		  		                                    		          <=
     		  		  		                                    		          (
     		  		  		                                    		              x
     		  		  		                                    		              6
     		  		  		                                    		          )
     		  		  		                                    		      )
     		  		  		                                    		     )
     		  		  		                                    		)
     		  		  		                                    		    		   
     		  		  		                                       )
     		  		  		                                  )
     		  		  		                                      		   
     		  		  		                                    									  
     		  		  		                                 )
     		  		  		                                in
     		  		  		                                  =
     		  		  		                                  (
     		  		  		                                      M.bindings
     		  		  		                                      (
     		  		  		                                          M.filter
     		  		  		                                          (
     		  		  		                                              p
     		  		  		                                              s1
     		  		  		                                          )
     		  		  		                                      )
     		  		  		                                      List.filter
     		  		  		                                      (
     		  		  		                                          uncurry
     		  		  		                                          (
     		  		  		                                              p
     		  		  		                                          )
     		  		  		                                          M.bindings
     		  		  		                                          (
     		  		  		                                              s1
     		  		  		                                          )
     		  		  		                                      )
     		  		  		                                  )
     		  		  		                                )
     		  		  		                                    									
     		  		  		                            )
     		  		  		                          ;
     		  		  		                            
     		  		  		                            sequence
     		  		  		                            (
     		  		  		                              checkbool
     		  		  		                              (
     		  		  		                                  "partition"
     		  		  		                                  
     		  		  		                                  let
     		  		  		                                  (
     		  		  		                                   (
     		  		  		                                      									  
     		  		  		                                    
     		  		  		                                     p
     		  		  		                                    (
     		  		  		                                     case
     		  		  		                                         (
     		  		  		                                      		
     		  		  		                                      		 x
     		  		  		                                      		(
     		  		  		                                      		 case
     		  		  		                                      		     (
     		  		  		                                      		 	  y
     		  		  		                                      		      &&
     		  		  		                                      		      (
     		  		  		                                      		          >=
     		  		  		                                      		          (
     		  		  		                                      		              x
     		  		  		                                      		              3
     		  		  		                                      		          )
     		  		  		                                      		          <=
     		  		  		                                      		          (
     		  		  		                                      		              x
     		  		  		                                      		              6
     		  		  		                                      		          )
     		  		  		                                      		      )
     		  		  		                                      		     )
     		  		  		                                      		)
     		  		  		                                      		    		   
     		  		  		                                         )
     		  		  		                                    )
     		  		  		                                        		   
     		  		  		                                      									  
     		  		  		                                   )
     		  		  		                                  in
     		  		  		                                    
     		  		  		                                    let
     		  		  		                                    (
     		  		  		                                     (
     		  		  		                                        									  
     		  		  		                                      
     		  		  		                                       
     		  		  		                                       (
     		  		  		                                        st
     		  		  		                                            						 
     		  		  		                                       	sf
     		  		  		                                       
     		  		  		                                       )
     		  		  		                                       M.partition
     		  		  		                                       (
     		  		  		                                           p
     		  		  		                                           s1
     		  		  		                                       ) 
     		  		  		                                      							    		   
     		  		  		                                        									  
     		  		  		                                      
     		  		  		                                       
     		  		  		                                       (
     		  		  		                                        lt
     		  		  		                                            						 
     		  		  		                                       	lf
     		  		  		                                       
     		  		  		                                       )
     		  		  		                                       List.partition
     		  		  		                                       (
     		  		  		                                           uncurry
     		  		  		                                           (
     		  		  		                                               p
     		  		  		                                           )
     		  		  		                                           M.bindings
     		  		  		                                           (
     		  		  		                                               s1
     		  		  		                                           )
     		  		  		                                       ) 
     		  		  		                                      							    		   
     		  		  		                                        									  
     		  		  		                                     )
     		  		  		                                    in
     		  		  		                                      &&
     		  		  		                                      (
     		  		  		                                          =
     		  		  		                                          (
     		  		  		                                              M.bindings
     		  		  		                                              (
     		  		  		                                                  st
     		  		  		                                              )
     		  		  		                                              lt
     		  		  		                                          )
     		  		  		                                          =
     		  		  		                                          (
     		  		  		                                              M.bindings
     		  		  		                                              (
     		  		  		                                                  sf
     		  		  		                                              )
     		  		  		                                              lf
     		  		  		                                          )
     		  		  		                                      )
     		  		  		                                    )
     		  		  		                                        									
     		  		  		                                  )
     		  		  		                                      									
     		  		  		                              )
     		  		  		                            ;
     		  		  		                              
     		  		  		                              sequence
     		  		  		                              (
     		  		  		                                checkbool
     		  		  		                                (
     		  		  		                                    "cardinal"
     		  		  		                                    =
     		  		  		                                    (
     		  		  		                                        M.cardinal
     		  		  		                                        (
     		  		  		                                            s1
     		  		  		                                        )
     		  		  		                                        List.length
     		  		  		                                        (
     		  		  		                                            M.bindings
     		  		  		                                            (
     		  		  		                                                s1
     		  		  		                                            )
     		  		  		                                        )
     		  		  		                                    )
     		  		  		                                )
     		  		  		                              ;
     		  		  		                                
     		  		  		                                sequence
     		  		  		                                (
     		  		  		                                  checkbool
     		  		  		                                  (
     		  		  		                                      "min_binding"
     		  		  		                                      
     		  		  		                                      try
     		  		  		                                      
     		  		  		                                      let
     		  		  		                                      (
     		  		  		                                       (
     		  		  		                                          									  
     		  		  		                                        
     		  		  		                                         
     		  		  		                                         (
     		  		  		                                          k
     		  		  		                                              						 
     		  		  		                                         	v
     		  		  		                                         
     		  		  		                                         )
     		  		  		                                         M.min_binding
     		  		  		                                         (
     		  		  		                                             s1
     		  		  		                                         ) 
     		  		  		                                        							    		   
     		  		  		                                          									  
     		  		  		                                       )
     		  		  		                                      in
     		  		  		                                        &&
     		  		  		                                        (
     		  		  		                                            =
     		  		  		                                            (
     		  		  		                                                img
     		  		  		                                                (
     		  		  		                                                    k
     		  		  		                                                    s1
     		  		  		                                                )
     		  		  		                                                
     		  		  		                                                 Some
     		  		  		                                                 v
     		  		  		                                                    								 
     		  		  		                                            )
     		  		  		                                            M.for_all
     		  		  		                                            (
     		  		  		                                                (
     		  		  		                                                 
     		  		  		                                                 case
     		  		  		                                                 (
     		  		  		                                                   i
     		  		  		                                                   (
     		  		  		                                                   
     		  		  		                                                   case
     		  		  		                                                   (
     		  		  		                                                   _
     		  		  		                                                   
     		  		  		                                                   <=
     		  		  		                                                   (
     		  		  		                                                       k
     		  		  		                                                       i
     		  		  		                                                   )
     		  		  		                                                   )
     		  		  		                                                   													 
     		  		  		                                                   )
     		  		  		                                                 )													
     		  		  		                                                 													
     		  		  		                                                )
     		  		  		                                                   						  
     		  		  		                                                s1
     		  		  		                                            )
     		  		  		                                        )
     		  		  		                                      )
     		  		  		                                          									
     		  		  		                                      (
     		  		  		                                      
     		  		  		                                      case
     		  		  		                                      (
     		  		  		                                        Not_found
     		  		  		                                        
     		  		  		                                        M.is_empty
     		  		  		                                        (
     		  		  		                                            s1
     		  		  		                                        )
     		  		  		                                      ) 
     		  		  		                                      	        											 
     		  		  		                                      	        											 
     		  		  		                                      )
     		  		  		                                          							   
     		  		  		                                  )
     		  		  		                                ;
     		  		  		                                  
     		  		  		                                  sequence
     		  		  		                                  (
     		  		  		                                    checkbool
     		  		  		                                    (
     		  		  		                                        "max_binding"
     		  		  		                                        
     		  		  		                                        try
     		  		  		                                        
     		  		  		                                        let
     		  		  		                                        (
     		  		  		                                         (
     		  		  		                                            									  
     		  		  		                                          
     		  		  		                                           
     		  		  		                                           (
     		  		  		                                            k
     		  		  		                                                						 
     		  		  		                                           	v
     		  		  		                                           
     		  		  		                                           )
     		  		  		                                           M.max_binding
     		  		  		                                           (
     		  		  		                                               s1
     		  		  		                                           ) 
     		  		  		                                          							    		   
     		  		  		                                            									  
     		  		  		                                         )
     		  		  		                                        in
     		  		  		                                          &&
     		  		  		                                          (
     		  		  		                                              =
     		  		  		                                              (
     		  		  		                                                  img
     		  		  		                                                  (
     		  		  		                                                      k
     		  		  		                                                      s1
     		  		  		                                                  )
     		  		  		                                                  
     		  		  		                                                   Some
     		  		  		                                                   v
     		  		  		                                                      								 
     		  		  		                                              )
     		  		  		                                              M.for_all
     		  		  		                                              (
     		  		  		                                                  (
     		  		  		                                                   
     		  		  		                                                   case
     		  		  		                                                   (
     		  		  		                                                     i
     		  		  		                                                     (
     		  		  		                                                     
     		  		  		                                                     case
     		  		  		                                                     (
     		  		  		                                                     _
     		  		  		                                                     
     		  		  		                                                     >=
     		  		  		                                                     (
     		  		  		                                                         k
     		  		  		                                                         i
     		  		  		                                                     )
     		  		  		                                                     )
     		  		  		                                                     													 
     		  		  		                                                     )
     		  		  		                                                   )													
     		  		  		                                                   													
     		  		  		                                                  )
     		  		  		                                                     						  
     		  		  		                                                  s1
     		  		  		                                              )
     		  		  		                                          )
     		  		  		                                        )
     		  		  		                                            									
     		  		  		                                        (
     		  		  		                                        
     		  		  		                                        case
     		  		  		                                        (
     		  		  		                                          Not_found
     		  		  		                                          
     		  		  		                                          M.is_empty
     		  		  		                                          (
     		  		  		                                              s1
     		  		  		                                          )
     		  		  		                                        ) 
     		  		  		                                        	        											 
     		  		  		                                        	        											 
     		  		  		                                        )
     		  		  		                                            							   
     		  		  		                                    )
     		  		  		                                  ;
     		  		  		                                    
     		  		  		                                    sequence
     		  		  		                                    (
     		  		  		                                      checkbool
     		  		  		                                      (
     		  		  		                                          "choose"
     		  		  		                                          
     		  		  		                                          try
     		  		  		                                          
     		  		  		                                          let
     		  		  		                                          (
     		  		  		                                           (
     		  		  		                                              									  
     		  		  		                                            
     		  		  		                                             
     		  		  		                                             (
     		  		  		                                              x
     		  		  		                                                  						 
     		  		  		                                             	v
     		  		  		                                             
     		  		  		                                             )
     		  		  		                                             M.choose
     		  		  		                                             (
     		  		  		                                                 s1
     		  		  		                                             ) 
     		  		  		                                            							    		   
     		  		  		                                              									  
     		  		  		                                           )
     		  		  		                                          in
     		  		  		                                            =
     		  		  		                                            (
     		  		  		                                                img
     		  		  		                                                (
     		  		  		                                                    x
     		  		  		                                                    s1
     		  		  		                                                )
     		  		  		                                                
     		  		  		                                                 Some
     		  		  		                                                 v
     		  		  		                                                    								 
     		  		  		                                            )
     		  		  		                                          )
     		  		  		                                              									
     		  		  		                                          (
     		  		  		                                          
     		  		  		                                          case
     		  		  		                                          (
     		  		  		                                            Not_found
     		  		  		                                            
     		  		  		                                            M.is_empty
     		  		  		                                            (
     		  		  		                                                s1
     		  		  		                                            )
     		  		  		                                          ) 
     		  		  		                                          	        											 
     		  		  		                                          	        											 
     		  		  		                                          )
     		  		  		                                              							   
     		  		  		                                      )
     		  		  		                                    ;
     		  		  		                                      check
     		  		  		                                      (
     		  		  		                                          "split"
     		  		  		                                          
     		  		  		                                          let
     		  		  		                                          (
     		  		  		                                           (
     		  		  		                                              									  
     		  		  		                                            
     		  		  		                                             
     		  		  		                                             (
     		  		  		                                              l
     		  		  		                                                  						 
     		  		  		                                             	p
     		  		  		                                             
     		  		  		                                             	r
     		  		  		                                             
     		  		  		                                             )
     		  		  		                                             M.split
     		  		  		                                             (
     		  		  		                                                 x
     		  		  		                                                 s1
     		  		  		                                             ) 
     		  		  		                                            							    		   
     		  		  		                                              									  
     		  		  		                                           )
     		  		  		                                          in
     		  		  		                                            (
     		  		  		                                             
     		  		  		                                             case
     		  		  		                                             (
     		  		  		                                             i
     		  		  		                                             
     		  		  		                                             ifthenelse
     		  		  		                                             (
     		  		  		                                              if
     		  		  		                                              (
     		  		  		                                               <
     		  		  		                                               (
     		  		  		                                                   i
     		  		  		                                                   x
     		  		  		                                               )
     		  		  		                                              )
     		  		  		                                              then
     		  		  		                                              (
     		  		  		                                               =
     		  		  		                                               (
     		  		  		                                                   img
     		  		  		                                                   (
     		  		  		                                                       i
     		  		  		                                                       l
     		  		  		                                                   )
     		  		  		                                                   img
     		  		  		                                                   (
     		  		  		                                                       i
     		  		  		                                                       s1
     		  		  		                                                   )
     		  		  		                                               )
     		  		  		                                              )
     		  		  		                                              else
     		  		  		                                              (
     		  		  		                                               ifthenelse
     		  		  		                                               (
     		  		  		                                                if
     		  		  		                                                (
     		  		  		                                                 >
     		  		  		                                                 (
     		  		  		                                                     i
     		  		  		                                                     x
     		  		  		                                                 )
     		  		  		                                                )
     		  		  		                                                then
     		  		  		                                                (
     		  		  		                                                 =
     		  		  		                                                 (
     		  		  		                                                     img
     		  		  		                                                     (
     		  		  		                                                         i
     		  		  		                                                         r
     		  		  		                                                     )
     		  		  		                                                     img
     		  		  		                                                     (
     		  		  		                                                         i
     		  		  		                                                         s1
     		  		  		                                                     )
     		  		  		                                                 )
     		  		  		                                                )
     		  		  		                                                else
     		  		  		                                                (
     		  		  		                                                 =
     		  		  		                                                 (
     		  		  		                                                     p
     		  		  		                                                     img
     		  		  		                                                     (
     		  		  		                                                         i
     		  		  		                                                         s1
     		  		  		                                                     )
     		  		  		                                                 )
     		  		  		                                                ) 
     		  		  		                                               )
     		  		  		                                               	    											 
     		  		  		                                              ) 
     		  		  		                                             )
     		  		  		                                             	    											 
     		  		  		                                             )
     		  		  		                                             													 
     		  		  		                                            )
     		  		  		                                               						  
     		  		  		                                          )
     		  		  		                                              									
     		  		  		                                      )
     		  		  		                                    )
     		  		  		                                        							
     		  		  		                                  )
     		  		  		                                      							
     		  		  		                                )
     		  		  		                                    							
     		  		  		                              )
     		  		  		                                  							
     		  		  		                            )
     		  		  		                                							
     		  		  		                          )
     		  		  		                              							
     		  		  		                        )
     		  		  		                            							
     		  		  		                      )
     		  		  		                          							
     		  		  		                    )
     		  		  		                        							
     		  		  		                  )
     		  		  		                      							
     		  		  		                )
     		  		  		                    							
     		  		  		              )
     		  		  		                  							
     		  		  		            )
     		  		  		                							
     		  		  		          )
     		  		  		              							
     		  		  		        )
     		  		  		            							
     		  		  		      )
     		  		  		          							
     		  		  		     )
     		  		  		)
     		  		  		    		   
     		  		     )
     		  		)
     		  		    		   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  let
  (
   
    rkey
   (
    case
        (
    	  ()
         Random.int
         (
             10
         )
        )
   )
       		    
  )
                                     
  let
  (
   
    rdata
   (
    case
        (
    	  ()
         Random.float
         (
             1.0
         )
        )
   )
       		    
  )
                                     
  let
  (
   
    rmap
   (
    case
        (
    	  ()
         
         let
         (
          (
             									  
           
            s
            ref
            (
                M.empty
            ) 
           							    		   
             									  
          )
         in
           
           sequence
           (
             forloop 
             (
                 i
                 1
                 <>
                 Random.int
                 (
                     10
                 )
                 :=
                 (
                     s
                     M.add
                     (
                         rkey
                         (
                             ()
                         )
                         rdata
                         (
                             ()
                         )
                         
                          !
                          (
                          s
                          )
                             							 
                     )
                 )
             )
           ;
             
              !
              (
              s
              )
                 							 
           )
               							
         )
             									
        )
   )
       		    
  )
                                     
  
   
   
   sequence
   (
     Random.init
     (
         42
     )
   ;
     forloop 
     (
         i
         1
         <>
         25000
         test
         (
             rkey
             (
                 ()
             )
             rdata
             (
                 ()
             )
             rmap
             (
                 ()
             )
             rmap
             (
                 ()
             )
         )
     )
   )
       							 
  							    		    
                                     
)