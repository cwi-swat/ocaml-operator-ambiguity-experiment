(
  external ["@","@"]
  (
   value_description
   arrow
   arrow
   a
   b
   arrow
   a
   b
  (
     "%apply"
  )
  )              
  let
  (
    f
   (
    case
        (
    	  x
         +
         (
             x
             x
         )
        )
   )
  )
  let
  (
    g
   (
    case
        (
    	  x
         *
         (
             x
             x
         )
        )
   )
  )
  let
  (
    h
   (
    case
        (
    	  x
         +
         (
             x
             1
         )
        )
   )
  )
  let
  (
    add
   (
    case
        (
     		 x
     		(
     		 case
     		     (
     		 	  y
     		      +
     		      (
     		          x
     		          y
     		      )
     		     )
     		)
        )
   )
  )
   List.iter
   (
       (
        case
        (
        x
        sequence
        (
          print_int
          (
              x
          )
        ;
          print_newline
          (
              ()
          )
        )
        )
       )
       ::
        (
        @@
        (
            f
            3
        )
        ::
        (
        @@
        (
            g
            @@
            (
                f
                3
            )
        )
        ::
        (
        @@
        (
            f
            @@
            (
                g
                3
            )
        )
        ::
        (
        @@
        (
            h
            @@
            (
                g
                @@
                (
                    f
                    3
                )
            )
        )
        ::
        (
        @@
        (
            add
            (
                4
            )
            @@
            (
                g
                @@
                (
                    f
                    @@
                    (
                        add
                        (
                            3
                        )
                        @@
                        (
                            add
                            (
                                2
                            )
                            3
                        )
                    )
                )
            )
        )
        []
        ) 
        ) 
        ) 
        ) 
        ) 
   ) 
  external ["@","@"]
  (
   value_description
   arrow
   arrow
   a
   b
   arrow
   a
   b
  (
     "%apply"
  )
  )              
  let
  (
    f
   (
    case
        (
    	  x
         +
         (
             x
             x
         )
        )
   )
  )
  let
  (
    g
   (
    case
        (
    	  x
         *
         (
             x
             x
         )
        )
   )
  )
  let
  (
    h
   (
    case
        (
    	  x
         +
         (
             x
             1
         )
        )
   )
  )
  let
  (
    add
   (
    case
        (
     		 x
     		(
     		 case
     		     (
     		 	  y
     		      +
     		      (
     		          x
     		          y
     		      )
     		     )
     		)
        )
   )
  )
   List.iter
   (
       (
        case
        (
        x
        sequence
        (
          print_int
          (
              x
          )
        ;
          print_newline
          (
              ()
          )
        )
        )
       )
       ::
        (
        @@
        (
            f
            3
        )
        ::
        (
        @@
        (
            g
            @@
            (
                f
                3
            )
        )
        ::
        (
        @@
        (
            f
            @@
            (
                g
                3
            )
        )
        ::
        (
        @@
        (
            h
            @@
            (
                g
                @@
                (
                    f
                    3
                )
            )
        )
        ::
        (
        @@
        (
            add
            (
                4
            )
            @@
            (
                g
                @@
                (
                    f
                    @@
                    (
                        add
                        (
                            3
                        )
                        @@
                        (
                            add
                            (
                                2
                            )
                            3
                        )
                    )
                )
            )
        )
        []
        ) 
        ) 
        ) 
        ) 
        ) 
   ) 
)
