
(
    								 
  open Bigarray
                                     
  open Printf
                                     
  let
  (
   
    error_occurred
    ref
    (
        false
    ) 
   							    		    
  )
                                     
  let
  (
   
    function_tested
    ref
    (
        ""
    ) 
   							    		    
  )
                                     
  let
  (
   
    testing_function
   (
    case
        (
    	  s
         
         sequence
         (
           :=
           (
               function_tested
               s
           )
         ;
           
           sequence
           (
             print_newline
             (
                 ()
             )
           ;
             
             sequence
             (
               print_string
               (
                   s
               )
             ;
               print_newline
               (
                   ()
               )
             )
                 							
           )
               							
         )
             							
        )
   )
       		    
  )
                                     
  let
  (
   
    test
   (
    case
        (
     		
     		 test_number
     		(
     		 case
     		     (
     		  		
     		  		 answer
     		  		(
     		  		 case
     		  		     (
     		  		 	  correct_answer
     		  		      
     		  		      sequence
     		  		      (
     		  		        flush
     		  		        (
     		  		            stdout
     		  		        )
     		  		      ;
     		  		        
     		  		        sequence
     		  		        (
     		  		          flush
     		  		          (
     		  		              stderr
     		  		          )
     		  		        ;
     		  		          ifthenelse
     		  		          (
     		  		           if
     		  		           (
     		  		            <>
     		  		            (
     		  		                answer
     		  		                correct_answer
     		  		            )
     		  		           )
     		  		           then
     		  		           (
     		  		            
     		  		            sequence
     		  		            (
     		  		              eprintf
     		  		              (
     		  		                  "*** Bad result (%s, test %d)\n"
     		  		                  
     		  		                   !
     		  		                   (
     		  		                   function_tested
     		  		                   )
     		  		                      							 
     		  		                  test_number
     		  		              )
     		  		            ;
     		  		              
     		  		              sequence
     		  		              (
     		  		                flush
     		  		                (
     		  		                    stderr
     		  		                )
     		  		              ;
     		  		                :=
     		  		                (
     		  		                    error_occurred
     		  		                    true
     		  		                )
     		  		              )
     		  		                  							
     		  		            )
     		  		                							
     		  		           )
     		  		           else
     		  		           (
     		  		            printf
     		  		            (
     		  		                " %d..."
     		  		                test_number
     		  		            )
     		  		           ) 
     		  		          )
     		  		          	    											 
     		  		        )
     		  		            							
     		  		      )
     		  		          							
     		  		     )
     		  		)
     		  		    		   
     		     )
     		)
     		    		   
        )
   )
       		    
  )
                                     
  external c_filltab
  (
   value_description
   arrow
   
   unit
   (
   )
   								  
   <["typexprConstr2"("typeConstr"([],"float")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()],"typexprConstr2"("typeConstr"([],"float64_elt")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr2"("typeConstr"([],"c_layout")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]],"typeConstr"(["extendedModulePath1"([],"Array2")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]],"t")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>
      								   
  (
   
       								
     "c_filltab"
       								
       								
  )
  )              
      								
                                     
  external c_printtab
  (
   value_description
   arrow
   <["typexprConstr2"("typeConstr"([],"float")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()],"typexprConstr2"("typeConstr"([],"float64_elt")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()],"typexprConstr2"("typeConstr"([],"c_layout")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]],"typeConstr"(["extendedModulePath1"([],"Array2")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]],"t")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]>
   
   unit
   (
   )
   								  
      								   
  (
   
       								
     "c_printtab"
       								
       								
  )
  )              
      								
                                     
  external fortran_filltab
  (
   value_description
   arrow
   
   unit
   (
   )
   								  
   <["typexprConstr2"("typeConstr"([],"float")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr2"("typeConstr"([],"float32_elt")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr2"("typeConstr"([],"fortran_layout")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]],"typeConstr"(["extendedModulePath1"([],"Array2")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]],"t")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]>
      								   
  (
   
       								
     "fortran_filltab"
       								
       								
  )
  )              
      								
                                     
  external fortran_printtab
  (
   value_description
   arrow
   <["typexprConstr2"("typeConstr"([],"float")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr2"("typeConstr"([],"float32_elt")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)])[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)],"typexprConstr2"("typeConstr"([],"fortran_layout")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()])[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]],"typeConstr"(["extendedModulePath1"([],"Array2")[@location=|dunno:///|(0,1,<1,1>,<1,1>),@comments=()]],"t")[@comments=(),@location=|dunno:///|(0,1,<1,1>,<1,1>)]>
   
   unit
   (
   )
   								  
      								   
  (
   
       								
     "fortran_printtab"
       								
       								
  )
  )              
      								
                                     
  
   
   
   let
   (
    (
       									  
     
      make_array2
     (
      case
          (
       		
       		 kind
       		(
       		 case
       		     (
       		  		
       		  		 layout
       		  		(
       		  		 case
       		  		     (
       		  		  		
       		  		  		 ind0
       		  		  		(
       		  		  		 case
       		  		  		     (
       		  		  		  		
       		  		  		  		 dim1
       		  		  		  		(
       		  		  		  		 case
       		  		  		  		     (
       		  		  		  		  		
       		  		  		  		  		 dim2
       		  		  		  		  		(
       		  		  		  		  		 case
       		  		  		  		  		     (
       		  		  		  		  		 	  fromint
       		  		  		  		  		      
       		  		  		  		  		      let
       		  		  		  		  		      (
       		  		  		  		  		       (
       		  		  		  		  		          									  
       		  		  		  		  		        
       		  		  		  		  		         a
       		  		  		  		  		         Array2.create
       		  		  		  		  		         (
       		  		  		  		  		             kind
       		  		  		  		  		             layout
       		  		  		  		  		             dim1
       		  		  		  		  		             dim2
       		  		  		  		  		         ) 
       		  		  		  		  		        							    		   
       		  		  		  		  		          									  
       		  		  		  		  		       )
       		  		  		  		  		      in
       		  		  		  		  		        
       		  		  		  		  		        sequence
       		  		  		  		  		        (
       		  		  		  		  		           for i
       		  		  		  		  		           ind0
       		  		  		  		  		           +
       		  		  		  		  		           (
       		  		  		  		  		               -
       		  		  		  		  		               (
       		  		  		  		  		                   dim1
       		  		  		  		  		                   1
       		  		  		  		  		               )
       		  		  		  		  		               ind0
       		  		  		  		  		           )
       		  		  		  		  		            for j
       		  		  		  		  		            ind0
       		  		  		  		  		            +
       		  		  		  		  		            (
       		  		  		  		  		                -
       		  		  		  		  		                (
       		  		  		  		  		                    dim2
       		  		  		  		  		                    1
       		  		  		  		  		                )
       		  		  		  		  		                ind0
       		  		  		  		  		            )
       		  		  		  		  		            Bigarray.Array1.set
       		  		  		  		  		            (
       		  		  		  		  		             a
       		  		  		  		  		             
       		  		  		  		  		             (
       		  		  		  		  		                 					 i
       		  		  		  		  		                 					 
       		  		  		  		  		             	j
       		  		  		  		  		                 					 
       		  		  		  		  		             )
       		  		  		  		  		                 					 
       		  		  		  		  		             fromint
       		  		  		  		  		             (
       		  		  		  		  		                 +
       		  		  		  		  		                 (
       		  		  		  		  		                     *
       		  		  		  		  		                     (
       		  		  		  		  		                         i
       		  		  		  		  		                         1000
       		  		  		  		  		                     )
       		  		  		  		  		                     j
       		  		  		  		  		                 )
       		  		  		  		  		             )
       		  		  		  		  		            )
       		  		  		  		  		                									
       		  		  		  		  		               														  
       		  		  		  		  		              														  
       		  		  		  		  		        ;
       		  		  		  		  		          a
       		  		  		  		  		        )
       		  		  		  		  		            							
       		  		  		  		  		      )
       		  		  		  		  		          									
       		  		  		  		  		     )
       		  		  		  		  		)
       		  		  		  		  		    		   
       		  		  		  		     )
       		  		  		  		)
       		  		  		  		    		   
       		  		  		     )
       		  		  		)
       		  		  		    		   
       		  		     )
       		  		)
       		  		    		   
       		     )
       		)
       		    		   
          )
     )
         		   
       									  
    )
   in
     
     sequence
     (
       print_newline
       (
           ()
       )
     ;
       
       sequence
       (
         testing_function
         (
             "------ Foreign function interface --------"
         )
       ;
         
         sequence
         (
           testing_function
           (
               "Passing an array to C"
           )
         ;
           
           sequence
           (
             c_printtab
             (
                 make_array2
                 (
                     float64
                     c_layout
                     0
                     6
                     8
                     float
                 )
             )
           ;
             
             sequence
             (
               testing_function
               (
                   "Accessing a C array"
               )
             ;
               
               let
               (
                (
                   									  
                 
                  a
                  c_filltab
                  (
                      ()
                  ) 
                 							    		   
                   									  
                )
               in
                 
                 sequence
                 (
                   test
                   (
                       1
                       Bigarray.Array1.get
                       (
                        a
                        
                        (
                            					 0
                            					 
                        	0
                            					 
                        )
                            					 
                       )
                       												
                       0.0
                   )
                 ;
                   
                   sequence
                   (
                     test
                     (
                         2
                         Bigarray.Array1.get
                         (
                          a
                          
                          (
                              					 1
                              					 
                          	0
                              					 
                          )
                              					 
                         )
                         												
                         100.0
                     )
                   ;
                     
                     sequence
                     (
                       test
                       (
                           3
                           Bigarray.Array1.get
                           (
                            a
                            
                            (
                                					 0
                                					 
                            	1
                                					 
                            )
                                					 
                           )
                           												
                           1.0
                       )
                     ;
                       
                       sequence
                       (
                         test
                         (
                             4
                             Bigarray.Array1.get
                             (
                              a
                              
                              (
                                  					 5
                                  					 
                              	4
                                  					 
                              )
                                  					 
                             )
                             												
                             504.0
                         )
                       ;
                         
                         sequence
                         (
                           testing_function
                           (
                               "Passing an array to Fortran"
                           )
                         ;
                           
                           sequence
                           (
                             fortran_printtab
                             (
                                 make_array2
                                 (
                                     float32
                                     fortran_layout
                                     1
                                     5
                                     4
                                     float
                                 )
                             )
                           ;
                             
                             sequence
                             (
                               testing_function
                               (
                                   "Accessing a Fortran array"
                               )
                             ;
                               
                               let
                               (
                                (
                                   									  
                                 
                                  a
                                  fortran_filltab
                                  (
                                      ()
                                  ) 
                                 							    		   
                                   									  
                                )
                               in
                                 
                                 sequence
                                 (
                                   test
                                   (
                                       1
                                       Bigarray.Array1.get
                                       (
                                        a
                                        
                                        (
                                            					 1
                                            					 
                                        	1
                                            					 
                                        )
                                            					 
                                       )
                                       												
                                       101.0
                                   )
                                 ;
                                   
                                   sequence
                                   (
                                     test
                                     (
                                         2
                                         Bigarray.Array1.get
                                         (
                                          a
                                          
                                          (
                                              					 2
                                              					 
                                          	1
                                              					 
                                          )
                                              					 
                                         )
                                         												
                                         201.0
                                     )
                                   ;
                                     
                                     sequence
                                     (
                                       test
                                       (
                                           3
                                           Bigarray.Array1.get
                                           (
                                            a
                                            
                                            (
                                                					 1
                                                					 
                                            	2
                                                					 
                                            )
                                                					 
                                           )
                                           												
                                           102.0
                                       )
                                     ;
                                       test
                                       (
                                           4
                                           Bigarray.Array1.get
                                           (
                                            a
                                            
                                            (
                                                					 5
                                                					 
                                            	4
                                                					 
                                            )
                                                					 
                                           )
                                           												
                                           504.0
                                       )
                                     )
                                         							
                                   )
                                       							
                                 )
                                     							
                               )
                                   									
                             )
                                 							
                           )
                               							
                         )
                             							
                       )
                           							
                     )
                         							
                   )
                       							
                 )
                     							
               )
                   									
             )
                 							
           )
               							
         )
             							
       )
           							
     )
         							
   )
       									 
  							    		    
                                     
)