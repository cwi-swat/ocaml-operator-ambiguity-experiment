(
  module type Poly
   signature
   (
    type
    (  						
       t
         type
         params=
         (
         a
         )
         cstrs =
         (
         type constraint
         (
         	a
         	(
         	)
         )
         )
         kind =
         a
    )
   )    								
  module  Combine
  functor A
  (
   Poly
   functor B
   (
     Poly
     struct
     (
     type
     (  						
        t
          type
          params=
          (
           a
           b
          )
          cstrs =
          (
          type constraint
          (
          	a
          	 B.t
          	 (
          	   b
          	 )
          )
          )
          kind =
           A.t
           (
             a
           )
     )
     )
   )
  )
  module  C
   Combine
   (
   struct
   (
   type
   (  						
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
        type constraint
        (
        	a
        	(
        	)
        )
        )
        kind =
        a
   )
   )
   )
   (
   struct
   (
   type
   (  						
      t
        type
        params=
        (
        a
        )
        cstrs =
        (
        type constraint
        (
        	a
        	(
        	)
        )
        )
        kind =
        a
   )
   )
   )
)
