(
  let
  (
    f
   (
    case
        (
    	  flag
         let module T
           (
         		 Set.Make
         		(
         		struct
         		(
         		type
         		(  						
         		   t
         		   type
         		   params=
         		   (
         		   )
         		   cstrs =
         		   (
         		   )
         		   kind =
         		  (
         		   int
         		  )
         		)
         		let
         		(
         		  compare
         		  compare 
         		)
         		)
         		)
           )
           in
           (
              let
              (
               (
                 _
                 match
                 flag
                 (
                 case
                 (
                   A
                   0
                 ) 
                   case
                   (
                    B
                    r
                    r
                   )
                 )
               )
              in
                let
                (
                 (
                   _
                   match
                   flag
                   (
                   case
                   (
                     A
                     T.mem
                   ) 
                     case
                     (
                      B
                      r
                      r
                     )
                   )
                 )
                in
                  ()
                )
              )
           )
        )
   )
  )
)
